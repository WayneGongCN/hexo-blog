<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OS</title>
  
  <subtitle>Code &amp; Life</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zowiegong.com/"/>
  <updated>2020-03-23T06:21:19.475Z</updated>
  <id>https://zowiegong.com/</id>
  
  <author>
    <name>zowiegong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker部署 Nginx + frp 内网穿透</title>
    <link href="https://zowiegong.com/posts/docker%E9%83%A8%E7%BD%B2nginx-frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html"/>
    <id>https://zowiegong.com/posts/docker部署nginx-frp内网穿透.html</id>
    <published>2020-03-23T06:17:20.000Z</published>
    <updated>2020-03-23T06:21:19.475Z</updated>
    
    <content type="html"><![CDATA[<h2><a aria-hidden="true"class="anchor"href="#%E5%89%8D%E8%A8%80"id="user-content-前言"><span class="octicon octicon-link"aria-hidden="true"></span></a>前言</h2><p>由于没有公网 IP，加上黑群晖没有洗白，无法进行外网的远程连接。<p>通过 frp 内网穿透后可以通过<code>sub.domain.com:xxx</code>的形式访问到内网的 web 服务，但是带上端口号十分不优雅也难以记忆。<p>在公网服务器上部署 Nginx 反向代理到 frp 的特定端口，即可在使用内网服务时不需要端口号了。<h2><a aria-hidden="true"class="anchor"href="#%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2"id="user-content-服务部署"><span class="octicon octicon-link"aria-hidden="true"></span></a>服务部署</h2><p>通过 docker-compose 启动 Dcoker 容器，然后通过 links 将 nginx 与 frp 容器连接，即可在 nginx 容器中将请求转发到 frp 容器。<p>前置条件：<ul><li>服务端需要 docker 环境及 docker-compose<li>nginx 镜像<li>snowdreamtech/frps 镜像</ul><p>frp docker 部署有个坑，一开始<code>fatedier/frp</code>镜像一直不能成功访问，报<code>read error</code>的错误。<p>后来一看镜像更新时间已经是 4 年前了，换了 Pulls 量最多的<code>snowdreamtech/frps</code>解决。<h3><a aria-hidden="true"class="anchor"href="#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84"id="user-content-目录结构"><span class="octicon octicon-link"aria-hidden="true"></span></a>目录结构</h3><pre><code>.├── docker-compose.yml├── frp│   └── config│       └── frps.ini└── nginx    ├── config    │   ├── conf.d    │   │   └── default.conf    │   └── nginx.conf    └── logs        ├── access.log        └── error.log</code></pre><p><code>docker-compose.yml</code>内容如下：<div class="highlight highlight-source-yaml"><pre><span class="pl-ent">version</span>: <span class="pl-s"><span class="pl-pds">"</span>3<span class="pl-pds">"</span></span><span class="pl-ent">services</span>:  <span class="pl-ent">nginx</span>:    <span class="pl-ent">image</span>: <span class="pl-s">nginx</span>    <span class="pl-ent">container_name</span>: <span class="pl-s">nginx</span>    <span class="pl-ent">restart</span>: <span class="pl-s">always</span>    <span class="pl-ent">volumes</span>:      - <span class="pl-s">./nginx/config/nginx.conf:/etc/nginx/nginx.conf</span>      - <span class="pl-s">./nginx/config/conf.d:/etc/nginx/conf.d</span>      - <span class="pl-s">./nginx/logs:/var/log/nginx</span>    <span class="pl-ent">ports</span>:      - <span class="pl-s"><span class="pl-pds">"</span>80:80<span class="pl-pds">"</span></span>    <span class="pl-ent">environment</span>:      - <span class="pl-s">NGINX_PORT=80</span>    <span class="pl-ent">links</span>:      - <span class="pl-s">frp</span>    <span class="pl-ent">frp</span>:    <span class="pl-ent">image</span>: <span class="pl-s">snowdreamtech/frps</span>    <span class="pl-ent">container_name</span>: <span class="pl-s">frp</span>    <span class="pl-ent">restart</span>: <span class="pl-s">always</span>    <span class="pl-ent">ports</span>:      - <span class="pl-s"><span class="pl-pds">"</span>7000:7000<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> 里的端口与 frps.ini 中 bind_port 保持一致</span>    <span class="pl-ent">volumes</span>:      - <span class="pl-s">./frp/config/frps.ini:/etc/frp/frps.ini</span></pre></div><p>nginx 的<code>default.conf</code>配置文件（可以先 run 一个 nginx 容器然后 通过<code>docker cp</code>得到默认配置）:<pre lang="conf"><code>server {    listen       80;    server_name  *.domain.com;    location / {        proxy_pass http://frp:8888; # 这里的端口与 frps.ini 中 vhost_http_port 保持一致        proxy_set_header    Host $host;        proxy_set_header    X-Real-IP $remote_addr;        proxy_set_header    X-Forwarded-Proto https;        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;    }}</code></pre><p><code>frps.ini</code>配置文件：<div class="highlight highlight-source-ini"><pre><span class="pl-en">[common]</span><span class="pl-k">bind_port</span> = 7000<span class="pl-k">vhost_http_port</span> = 8888</pre></div><p><code>frpc.ini</code>配置文件（这里是 frp 客户端配置，仅做参考）:<div class="highlight highlight-source-ini"><pre><span class="pl-en">[common]</span><span class="pl-k">server_addr</span> = x.x.x.x<span class="pl-k">server_port</span> = 7000<span class="pl-en">[xx sercer]</span><span class="pl-k">type</span> = http<span class="pl-k">local_port</span> = xxx<span class="pl-k">custom_domains</span> = sub.domain.com</pre></div><p>完成所有配置之后在<code>docker-compose.yml</code>所在的目录执行<code>docker-compose up</code>完成验证即可。<h2><a aria-hidden="true"class="anchor"href="#%E9%AA%8C%E8%AF%81"id="user-content-验证"><span class="octicon octicon-link"aria-hidden="true"></span></a>验证</h2><p>按照上述配置之后，原来通过<code>sub.domain.com:8888</code>才能访问的内网 web 服务现在只需要通过<code>sub.domain.com</code>访问即可。]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a aria-hidden=&quot;true&quot;class=&quot;anchor&quot;href=&quot;#%E5%89%8D%E8%A8%80&quot;id=&quot;user-content-前言&quot;&gt;&lt;span class=&quot;octicon octicon-link&quot;aria-hidden=&quot;true&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://zowiegong.com/tags/nginx/"/>
    
      <category term="Docker" scheme="https://zowiegong.com/tags/Docker/"/>
    
      <category term="frp" scheme="https://zowiegong.com/tags/frp/"/>
    
  </entry>
  
  <entry>
    <title>群晖 Docker 部署 Codimd</title>
    <link href="https://zowiegong.com/posts/%E7%BE%A4%E6%99%96Docker%E9%83%A8%E7%BD%B2Codimd.html"/>
    <id>https://zowiegong.com/posts/群晖Docker部署Codimd.html</id>
    <published>2020-03-22T08:28:58.000Z</published>
    <updated>2020-03-23T06:21:19.483Z</updated>
    
    <content type="html"><![CDATA[<h2><a href="#%E5%89%8D%E8%A8%80"aria-hidden="true"class="anchor"id="user-content-前言"><span aria-hidden="true"class="octicon octicon-link"></span></a>前言</h2><p>在线文档协同编辑有很多选择，但是大多都没有支持 Markdown。<p>发现一款 Markdown 在线协同编辑平台<a href="https://hackmd.io"rel="nofollow noopener"target="_blank">hackmd</a>（貌似打不开），社区免费版叫做<a href="https://github.com/hackmdio/codimd"rel="noopener"target="_blank">Codimd</a>。<p>在<a href="https://demo.codimd.org/"rel="nofollow noopener"target="_blank">demo.codimd.org</a>体验了几天非常不错。<p>支持多人实时在线编辑、简单的版本控制、样式简洁、公式、目录、代码高亮、各种图表支持的也非常到位。<p>但是看着域名中的 demo 害怕突然哪天跟 hackmd.io 一样打不开就完蛋了，家里星际蜗牛 24 小时开机，打算部署在黑群晖的 Docker 中。<h2><a href="#%E9%83%A8%E7%BD%B2"aria-hidden="true"class="anchor"id="user-content-部署"><span aria-hidden="true"class="octicon octicon-link"></span></a>部署</h2><p>黑群晖没有装<code>docker-compose</code>，不过群晖的 Docker 控制台对新手也非常友好。<p>根据<a href="https://github.com/codimd/container"rel="noopener"target="_blank">https://github.com/codimd/container</a>仓库中的<code>docker-compose.yml</code>来简单配置一下就可以了。<p>提前拉一下需要的 images：<ol><li>MySQL （Docker 控制台 - 注册表 - 搜 MySQL - 下载 latest 就可以了）<li><code>quay.io/codimd/server:1.6.0</code>（Docker 控制台 - 映像 - 新增 - 从 URL 添加 ）</ol><h3><a href="#docker-%E9%83%A8%E7%BD%B2-mysql"aria-hidden="true"class="anchor"id="user-content-docker-部署-mysql"><span aria-hidden="true"class="octicon octicon-link"></span></a>Docker 部署 MySQL</h3><p>试了下 Mariadb，但是环境变量貌似无法生效，换成 MySQL 也一样。<ol><li>选中 MySQL 映像，启动。<li>勾选高权限、设置优先级（可选）<li>进入高级设置，自动重启勾上（可选）<li>选择“卷”映射数据目录到<code>/var/lib/mysql</code>，映射<a href="https://github.com/codimd/container/blob/master/resources/utf8.cnf"rel="noopener"target="_blank">uft8.cnf</a>到<code>/etc/mysql/conf.d/utf8.cnf</code><li>配置环境变量<ul><li><code>MYSQL_USER = hackmd</code><li><code>MYSQL_PASSWORD = xxxxxx</code><li><code>MYSQL_DATABSE = hackmd</code><li><code>MYSQL_ROOT_PASSWORD = xxx</code></ul><li>其余保持默认，应用。</ol><h3><a href="#docker-%E9%83%A8%E7%BD%B2-codimdserver"aria-hidden="true"class="anchor"id="user-content-docker-部署-codimdserver"><span aria-hidden="true"class="octicon octicon-link"></span></a>Docker 部署 codimd/server</h3><ol><li>选中 MySQL 映像，启动。<li>勾选高权限、设置优先级（可选）<li>进入高级设置，自动重启勾上（可选）<li>端口映射自行按需配置<li>选择 “链接” 选择前面部署的 mysql 容器名称设置别名为<code>database</code><li>配置环境变量<ul><li><code>CMD_DB_URL = mysql:hackmd:xxx@database/hackmd</code>（格式为：<code>&lt;databasetype&gt;://&lt;username&gt;:&lt;password&gt;@&lt;hostname&gt;/&lt;database&gt;</code>自行修改）</ul><li>其余保持默认，应用。</ol><h3><a href="#%E9%AA%8C%E8%AF%81"aria-hidden="true"class="anchor"id="user-content-验证"><span aria-hidden="true"class="octicon octicon-link"></span></a>验证</h3><p>分别查看 MySQL 、codimd/server 两个容器的日志有无错误信息。<p>MySQL 容器日志有<code>[Server] X Plugin ready for connections. Socket: '/var/run/mysqld/mysqlx.sock' bind-address: '::' port: 33060</code>类似即可。<p>codimd/server 容器日志有<code>HTTP Server listening at 0.0.0.0:3000</code>类似即可。]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a href=&quot;#%E5%89%8D%E8%A8%80&quot;aria-hidden=&quot;true&quot;class=&quot;anchor&quot;id=&quot;user-content-前言&quot;&gt;&lt;span aria-hidden=&quot;true&quot;class=&quot;octicon octicon-link&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="Docker" scheme="https://zowiegong.com/tags/Docker/"/>
    
      <category term="群晖" scheme="https://zowiegong.com/tags/%E7%BE%A4%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>星际蜗牛安装黑群晖</title>
    <link href="https://zowiegong.com/posts/%E6%98%9F%E9%99%85%E8%9C%97%E7%89%9B%E5%AE%89%E8%A3%85%E9%BB%91%E7%BE%A4%E6%99%96.html"/>
    <id>https://zowiegong.com/posts/星际蜗牛安装黑群晖.html</id>
    <published>2020-03-04T13:13:58.000Z</published>
    <updated>2020-03-04T15:02:45.851Z</updated>
    
    <content type="html"><![CDATA[<p>矿难捡漏，星际蜗牛 B 款单千兆网口 J1900 处理器 4GB DDR3 内存带 16GB MSata 硬盘。<p><a href="./%E6%98%9F%E9%99%85%E8%9C%97%E7%89%9B%E5%AE%89%E8%A3%85%E9%BB%91%E7%BE%A4%E6%99%96/order.png"rel="noopener noreferrer"target="_blank"><img alt="order"src="./%E6%98%9F%E9%99%85%E8%9C%97%E7%89%9B%E5%AE%89%E8%A3%85%E9%BB%91%E7%BE%A4%E6%99%96/order.png"style="max-width:100%;"></a><h2><a href="#%E5%89%8D%E8%A8%80"aria-hidden="true"class="anchor"id="user-content-前言"><span aria-hidden="true"class="octicon octicon-link"></span></a>前言</h2><p>之前一直装的是<a href="https://www.openmediavault.org/"rel="nofollow noopener"target="_blank">OMV</a>，现在换成了黑群晖。从体验上来讲群晖对新手还是更加友好一些。<p>期间分别装了两个机型的不同系统版本（均没有洗白）：<ol><li>DS3615xs 机型 DSM 5.2<li>DS3617xs 机型 DSM 6.2</ol><p>其中前者带有集显驱动，Jellify 能够硬解，但没有 VM 虚拟机套件，后者有 VM 套件但无法硬解。<h2><a href="#%E5%87%86%E5%A4%87"aria-hidden="true"class="anchor"id="user-content-准备"><span aria-hidden="true"class="octicon octicon-link"></span></a>准备</h2><ul><li>PE 系统 U 盘<li><a href="https://www.synology.cn/zh-cn/support/download/DS3617xs#utilities"rel="nofollow noopener"target="_blank">Synology Assistant</a><li>引导、系统、写盘工具：<a href="https://pan.baidu.com/s/1xQHJPKQnGtoMiA0aVPnN-w"rel="nofollow noopener"target="_blank">https://pan.baidu.com/s/1xQHJPKQnGtoMiA0aVPnN-w</a>提取码:<code>hzuf</code></ul><h2><a href="#%E6%AD%A5%E9%AA%A4"aria-hidden="true"class="anchor"id="user-content-步骤"><span aria-hidden="true"class="octicon octicon-link"></span></a>步骤</h2><p>以下步骤不包含洗白<ol><li>将<strong>写盘工具</strong>与需要安装机型的<strong>引导文件</strong>Copy 到 PE 盘中<li>在 PE 系统中把引导文件通过写盘工具写入系统盘<li>拔掉 U 盘重启<li>在同一局域网内装有 Synology Assistant 的机器上查询 DSM，找到状态为<strong>DSM未安装</strong>的机器<li>右键上传对应机型的<code>pat</code>文件进行 DSM 安装<li>等待约十分钟完成安装</ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;矿难捡漏，星际蜗牛 B 款单千兆网口 J1900 处理器 4GB DDR3 内存带 16GB MSata 硬盘。&lt;p&gt;&lt;a href=&quot;./%E6%98%9F%E9%99%85%E8%9C%97%E7%89%9B%E5%AE%89%E8%A3%85%E9%BB%91%E7%
      
    
    </summary>
    
      <category term="other" scheme="https://zowiegong.com/categories/other/"/>
    
    
      <category term="nas" scheme="https://zowiegong.com/tags/nas/"/>
    
      <category term="system" scheme="https://zowiegong.com/tags/system/"/>
    
  </entry>
  
  <entry>
    <title>ESP8266 初体验</title>
    <link href="https://zowiegong.com/posts/Hello_ESP8266.html"/>
    <id>https://zowiegong.com/posts/Hello_ESP8266.html</id>
    <published>2020-01-18T16:00:00.000Z</published>
    <updated>2020-01-19T05:52:22.315Z</updated>
    
    <content type="html"><![CDATA[<h2><a href="#esp8266-%E6%98%AF%E4%BB%80%E4%B9%88"aria-hidden="true"class="anchor"id="user-content-esp8266-是什么"><span aria-hidden="true"class="octicon octicon-link"></span></a>ESP8266 是什么？</h2><blockquote><p>ESP8266 是一款由上海乐鑫信息科技开发的可以作为微控制器使用的成本极低且具有完整TCP/IP协议栈的Wi-Fi IoT控制芯片。</blockquote><p>简单来说就是这块芯片能连 WiFi 、能编程控制 GPIO。<h3><a href="#esp8266-%E5%BC%80%E5%8F%91%E6%9D%BF%E6%98%AF%E4%BB%80%E4%B9%88"aria-hidden="true"class="anchor"id="user-content-esp8266-开发板是什么"><span aria-hidden="true"class="octicon octicon-link"></span></a>ESP8266 开发板是什么？</h3><p>但是单独对一块芯片进行开发调试会比较麻烦，需要连接串口、电源等等。 市面上有许多 ESP8266 的开发版，使用开发版我们只需要通过 USB 接口连接开发版，就可以方便的进行开发、烧录、调试。<p>我这里使用的是 NodeMcu 开发板。<h3><a href="#nodemcu-%E6%98%AF%E4%BB%80%E4%B9%88"aria-hidden="true"class="anchor"id="user-content-nodemcu-是什么"><span aria-hidden="true"class="octicon octicon-link"></span></a>NodeMcu 是什么？</h3><blockquote><p>NodeMCU 是一个开源的物联网平台。 它使用Lua脚本语言编程。NodeMCU 包含了可以运行在 esp8266 Wi-Fi SoC芯片之上的固件,以及基于ESP-12模块的硬件。</blockquote><p>简单来说 NodeMcu 基于是 ESP8266 硬件（开发板），并提供一套固件让我们可以使用 Lua 脚本进行开发。<p>不过我虽然使用的是 NodeMcu 开发板，但使用的是 MicroPython 进行开发。<h3><a href="#micropython-%E6%98%AF%E4%BB%80%E4%B9%88"aria-hidden="true"class="anchor"id="user-content-micropython-是什么"><span aria-hidden="true"class="octicon octicon-link"></span></a>MicroPython 是什么？</h3><blockquote><p>MicroPython，是Python 3编程语言的一个完整软件实现，用C语言编写，被优化于运行在微控制器之上。</blockquote><p>和 NodeMcu 一样，MicroPython 是跑在 ESP8266 上的一个“操作系统”，我们可以通过 python 语言对硬件进行开发。<h2><a href="#hello-micropython"aria-hidden="true"class="anchor"id="user-content-hello-micropython"><span aria-hidden="true"class="octicon octicon-link"></span></a>Hello MicroPython</h2><p>由于 ESP8266 本身并没有安装 “MicroPython 操作系统”，首先我们得进行固件的烧录（安装操作系统）。<p>详细的步骤参考 MicroPython 的<a href="http://docs.micropython.org/en/latest/esp8266/quickref.html"rel="nofollow noopener"target="_blank"><strong>文档</strong></a><p>简单总结一下步骤：<ol><li>安装串口驱动<li>安装烧录工具<code>pip install esptool</code><li>下载 ESP8266<a href="http://micropython.org/download#esp8266"rel="nofollow noopener"target="_blank">固件</a><li>抹掉自带固件<code>esptool.py --port /dev/ttyUSB0 erase_flash</code>(<code>/dev/ttyUSB0</code>为串口硬件)<li>烧录固件<code>esptool.py --port /dev/ttyUSB0 --baud 460800 write_flash --flash_size=detect 0 固件目录</code><li>通过串口进入 REPL 环境</ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a href=&quot;#esp8266-%E6%98%AF%E4%BB%80%E4%B9%88&quot;aria-hidden=&quot;true&quot;class=&quot;anchor&quot;id=&quot;user-content-esp8266-是什么&quot;&gt;&lt;span aria-hidden=&quot;true&quot;clas
      
    
    </summary>
    
      <category term="other" scheme="https://zowiegong.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>WebAssembly 初体验</title>
    <link href="https://zowiegong.com/posts/Hello_WebAssembly.html"/>
    <id>https://zowiegong.com/posts/Hello_WebAssembly.html</id>
    <published>2020-01-18T16:00:00.000Z</published>
    <updated>2020-01-19T09:20:43.911Z</updated>
    
    <content type="html"><![CDATA[<h2><a href="#webassembly-%E6%98%AF%E4%BB%80%E4%B9%88"aria-hidden="true"class="anchor"id="user-content-webassembly-是什么"><span class="octicon octicon-link"aria-hidden="true"></span></a>WebAssembly 是什么</h2><blockquote><p>WebAssembly 是一种新的编码方式，可以在现代的网络浏览器中运行 － 它是一种低级的类汇编语言，具有紧凑的二进制格式，可以接近原生的性能运行，并为诸如C / C ++等语言提供一个编译目标，以便它们可以在Web上运行。</blockquote><p>个人理解：有了 WebAssembly 浏览器可以执行通过其他语言编译而来的二进制代码，并接近原生性能。<h2><a href="#hello-world"aria-hidden="true"class="anchor"id="user-content-hello-world"><span class="octicon octicon-link"aria-hidden="true"></span></a>Hello world</h2><p>详细步骤参考：<a href="https://webassembly.org/getting-started/developers-guide/"rel="nofollow noopener"target="_blank">https://webassembly.org/getting-started/developers-guide/</a><p>简单总结一下步骤：<ol><li>下载相关工具</ol><pre><code>$ git clone https://github.com/emscripten-core/emsdk.git$ cd emsdk$ ./emsdk install latest$ ./emsdk activate latest</code></pre><ol start="2"><li><p>设置环境变量:<code>source ./emsdk_env.sh --build=Release</code><li><p>编码<code>hello.c :</code></ol><div class="highlight highlight-source-c"><pre>#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span><span class="pl-k">int</span> <span class="pl-en">main</span> (<span class="pl-k">int</span> argc, <span class="pl-k">char</span> ** argv) {  <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>);}</pre></div><ol start="4"><li>编译:<code>emcc hello.c -o hello.html</code><li>起一个 WebServer:<code>emrun --no_browser --port 8080 .</code><li>打开<code>localhost:8080</code>查看</ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a href=&quot;#webassembly-%E6%98%AF%E4%BB%80%E4%B9%88&quot;aria-hidden=&quot;true&quot;class=&quot;anchor&quot;id=&quot;user-content-webassembly-是什么&quot;&gt;&lt;span class=&quot;octicon
      
    
    </summary>
    
      <category term="FE" scheme="https://zowiegong.com/categories/FE/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue 源码分析</title>
    <link href="https://zowiegong.com/posts/Vue%20source%20code.html"/>
    <id>https://zowiegong.com/posts/Vue source code.html</id>
    <published>2019-08-02T02:16:58.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<h2><a href="#observer"aria-hidden="true"class="anchor"id="user-content-observer"><span aria-hidden="true"class="octicon octicon-link"></span></a>Observer</h2><p><a href="/images/vue_source_code/vue_source_code.001.jpeg"rel="noopener noreferrer"target="_blank"><img alt="Observer"src="/images/vue_source_code/vue_source_code.001.jpeg"style="max-width:100%;"></a><h2><a href="#dependency-collection"aria-hidden="true"class="anchor"id="user-content-dependency-collection"><span aria-hidden="true"class="octicon octicon-link"></span></a>Dependency collection</h2><p><a href="/images/vue_source_code/vue_source_code.002.jpeg"rel="noopener noreferrer"target="_blank"><img alt="Dependency collection"src="/images/vue_source_code/vue_source_code.002.jpeg"style="max-width:100%;"></a><h2><a href="#dispatch"aria-hidden="true"class="anchor"id="user-content-dispatch"><span aria-hidden="true"class="octicon octicon-link"></span></a>Dispatch</h2><p><a href="/images/vue_source_code/vue_source_code.003.jpeg"rel="noopener noreferrer"target="_blank"><img alt="Dispatch"src="/images/vue_source_code/vue_source_code.003.jpeg"style="max-width:100%;"></a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a href=&quot;#observer&quot;aria-hidden=&quot;true&quot;class=&quot;anchor&quot;id=&quot;user-content-observer&quot;&gt;&lt;span aria-hidden=&quot;true&quot;class=&quot;octicon octicon-link&quot;&gt;&lt;/spa
      
    
    </summary>
    
      <category term="notes" scheme="https://zowiegong.com/categories/notes/"/>
    
    
      <category term="javascript" scheme="https://zowiegong.com/tags/javascript/"/>
    
      <category term="source code" scheme="https://zowiegong.com/tags/source-code/"/>
    
      <category term="vue" scheme="https://zowiegong.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>钻头种类与选择</title>
    <link href="https://zowiegong.com/posts/Drill%20types.html"/>
    <id>https://zowiegong.com/posts/Drill types.html</id>
    <published>2019-07-15T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<p>钻孔操作本质上讲是一种切削加工，完成切削加工需要满足的前提条件：<strong>刀具材料的硬度必须高于被加工材料的硬度</strong>。<h2><a aria-hidden="true"class="anchor"href="#%E6%9C%A8%E5%B7%A5%E9%92%BB%E5%A4%B4"id="user-content-木工钻头"><span aria-hidden="true"class="octicon octicon-link"></span></a>木工钻头</h2><p>在木质材料上钻孔，配合使用木工钻头，木工钻头切销量大，对刀具硬度要求不高，刀具材料一般为一般<strong>高速钢</strong>（HSS）。<h2><a aria-hidden="true"class="anchor"href="#%E9%87%91%E5%B7%A5%E9%92%BB%E5%A4%B4"id="user-content-金工钻头"><span aria-hidden="true"class="octicon octicon-link"></span></a>金工钻头</h2><p>在一般金属材料（合金钢，非合金钢，铸铁，铸钢，有色金属）上钻孔，配合使用金工钻头，钻头材质一般是<strong>高速钢</strong>（高级刀具含元素钴 HSS-Co）。<h2><a aria-hidden="true"class="anchor"href="#%E7%9F%B3%E5%B7%A5%E9%92%BB%E5%A4%B4"id="user-content-石工钻头"><span aria-hidden="true"class="octicon octicon-link"></span></a>石工钻头</h2><p>在混凝土材料和石材类材料中打孔，使用冲击钻，配合石工钻头，刀头材质一般为<strong>硬质合金</strong>。<p>在硬度更高的瓷砖及玻璃上钻孔使用瓷砖钻头，刀具材料为钨碳合金，因刀具硬度较高，韧性差，需要注意<strong>低速</strong>和<strong>无冲击</strong>使用。<h2><a aria-hidden="true"class="anchor"href="#%E6%80%BB%E7%BB%93"id="user-content-总结"><span aria-hidden="true"class="octicon octicon-link"></span></a>总结</h2><p>不在水泥墙上钻孔，就用普通的10mm规格的手电钻(100元左右)就行了，买个好点的钻头；<p>如果要在水泥墙上钻孔，就要买带冲击功能的冲击钻和配套的钻头。<p>常见的钻头规格有(3 4 5 6 8 10)。<p>在金属材料上钻孔，转速不要太高，否则容易烧坏钻头的刀刃。<p>越硬的工具韧性越差，越细的钻头刚度越差。]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;钻孔操作本质上讲是一种切削加工，完成切削加工需要满足的前提条件：&lt;strong&gt;刀具材料的硬度必须高于被加工材料的硬度&lt;/strong&gt;。&lt;h2&gt;&lt;a aria-hidden=&quot;true&quot;class=&quot;anchor&quot;href=&quot;#%E6%9C%A8%E5%B7%A5%E9%
      
    
    </summary>
    
      <category term="other" scheme="https://zowiegong.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>表单配置化思考</title>
    <link href="https://zowiegong.com/posts/Thinking%20about%20configurable%20from.html"/>
    <id>https://zowiegong.com/posts/Thinking about configurable from.html</id>
    <published>2019-07-12T16:00:00.000Z</published>
    <updated>2020-03-04T13:04:52.429Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>基于 Vue、Element，对表单配置化的<a href="https://github.com/maggie-wayne/conf-table-form-lib"rel="noopener"target="_blank">一个实现 <img alt="conf-table-form-lib"data-canonical-src="https://img.shields.io/github/stars/maggie-wayne/conf-table-form-lib.svg?style=social"src="https://camo.githubusercontent.com/8637197af53a1f536d6d166f6cbd49b87490c146/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6d61676769652d7761796e652f636f6e662d7461626c652d666f726d2d6c69622e7376673f7374796c653d736f6369616c"style="max-width:100%;"></a></blockquote><p>在偏后台系统的界面中，大多数页面都是表单、表格，这类页面占据了大多数开发时间。<p>业务逻辑也通常集中在表单、表格上，字段多、改动频繁、维护成本高。<p>如果能把这一部分独立出来，代码会更加条理清晰、可维护，也许能减少一些工作量？<h2><a href="#%E7%BB%84%E4%BB%B6%E5%8C%96-vs-%E9%85%8D%E7%BD%AE%E5%8C%96"aria-hidden="true"class="anchor"id="user-content-组件化-vs-配置化"><span aria-hidden="true"class="octicon octicon-link"></span></a>组件化 Vs 配置化</h2><p>如何把表单的渲染与表单的业务逻辑从页面中剥离出来？<p>让页面代码容器化，专注与获取、处理数据承载组件以及做一些与业务无关的事情，尽量减少后期需求变更对这一部分代码的修改。<h3><a href="#%E7%BB%84%E4%BB%B6%E5%8C%96"aria-hidden="true"class="anchor"id="user-content-组件化"><span aria-hidden="true"class="octicon octicon-link"></span></a><del>组件化</del></h3><p>一份表单往往对应一个具体的业务场景，如果将带有业务逻辑的表单封装成一个个表单组件，复用程度很低。<p>要将一个表单组件用于多个类似的业务场景。 比如表单组件 A 用于：<code>Create User</code>、<code>Update User</code>、<code>User Detail</code>。<p>因为组件 A 要兼容三个业务场景，内部将会充斥着各种<code>if...else</code>。<p>后期需求一旦变更只能硬着头皮往后继续<code>if...else</code>。甚至一处修改 N 处 Bug。<p>这种程度的代码复用往往不如直接硬编码来得实在。<h3><a href="#%E9%85%8D%E7%BD%AE%E5%8C%96"aria-hidden="true"class="anchor"id="user-content-配置化"><span aria-hidden="true"class="octicon octicon-link"></span></a>配置化</h3><p>为什么不喜欢业务逻辑？<p>业务逻辑难抽象、难复用、修改频繁，本质上就是<code>if...else</code>。<p>与其想方设法让不同业务逻辑挤在同一个组件，不如让他们一个萝卜一个坑。<p>用一份配置文件描述表单与逻辑，然后通过某个公共组件渲染。<p>这样下来，一个业务场景对应一个表单，对应一份配置文件，使用同一个组件渲染。<p>配置文件该如何定义才能足够灵活？渲染组件如何应对各种配置？]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;&lt;p&gt;基于 Vue、Element，对表单配置化的&lt;a href=&quot;https://github.com/maggie-wayne/conf-table-form-lib&quot;rel=&quot;noopener&quot;target=&quot;_blank&quot;&gt;一个实现 &lt;img al
      
    
    </summary>
    
      <category term="thinking" scheme="https://zowiegong.com/categories/thinking/"/>
    
    
  </entry>
  
  <entry>
    <title>图片测试</title>
    <link href="https://zowiegong.com/posts/Image%20test.html"/>
    <id>https://zowiegong.com/posts/Image test.html</id>
    <published>2019-07-09T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<h2><a href="#%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F"aria-hidden="true"class="anchor"id="user-content-滕王阁序"><span aria-hidden="true"class="octicon octicon-link"></span></a>滕王阁序</h2><p>豫章故郡，洪都新府。星分翼轸，地接衡庐。襟三江而带五湖，控蛮荆而引瓯越。物华天宝，龙光射牛斗之墟；人杰地灵，徐孺下陈蕃之榻。雄州雾列，俊采星驰。台隍枕夷夏之交，宾主尽东南之美。都督阎公之雅望，棨戟遥临；宇文新州之懿范，襜帷暂驻。十旬休假，胜友如云；千里逢迎，高朋满座。腾蛟起凤，孟学士之词宗；紫电青霜，王将军之武库。家君作宰，路出名区；童子何知，躬逢胜饯。<p>时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿；临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。<p>披绣闼，俯雕甍，山原旷其盈视，川泽纡其骇瞩。闾阎扑地，钟鸣鼎食之家；舸舰弥津，青雀黄龙之舳。云销雨霁，彩彻区明。落霞与孤鹜齐飞，秋水共长天一色。渔舟唱晚，响穷彭蠡之滨；雁阵惊寒，声断衡阳之浦。<p>遥襟甫畅，逸兴遄飞。爽籁发而清风生，纤歌凝而白云遏。睢园绿竹，气凌彭泽之樽；邺水朱华，光照临川之笔。四美具，二难并。穷睇眄于中天，极娱游于暇日。天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数。望长安于日下，目吴会于云间。地势极而南溟深，天柱高而北辰远。关山难越，谁悲失路之人？萍水相逢，尽是他乡之客。怀帝阍而不见，奉宣室以何年？<p>嗟乎！时运不齐，命途多舛。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时？所赖君子见机，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。酌贪泉而觉爽，处涸辙以犹欢。北海虽赊，扶摇可接；东隅已逝，桑榆非晚。孟尝高洁，空余报国之情；阮籍猖狂，岂效穷途之哭！<p>勃，三尺微命，一介书生。无路请缨，等终军之弱冠；有怀投笔，慕宗悫之长风。舍簪笏于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今兹捧袂，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？<p>呜乎！胜地不常，盛筵难再；兰亭已矣，梓泽丘墟。临别赠言，幸承恩于伟饯；登高作赋，是所望于群公。敢竭鄙怀，恭疏短引；一言均赋，四韵俱成。请洒潘江，各倾陆海云尔。<h2><a href="#small-image"aria-hidden="true"class="anchor"id="user-content-small-image"><span aria-hidden="true"class="octicon octicon-link"></span></a>Small image</h2><p><a href="/images/image_test/20190710190729.png"rel="noopener noreferrer"target="_blank"><img alt="Small image"src="/images/image_test/20190710190729.png"style="max-width:100%;"></a><h2><a href="#%E5%85%B0%E4%BA%AD%E9%9B%86%E5%BA%8F"aria-hidden="true"class="anchor"id="user-content-兰亭集序"><span aria-hidden="true"class="octicon octicon-link"></span></a>兰亭集序</h2><p>永和九年，岁在癸丑，暮春之初，会于会稽山阴之兰亭，修稧（禊）事也。群贤毕至，少长咸集。此地有崇山峻领（岭），茂林修竹；又有清流激湍，映带左右，引以为流觞曲水，列坐其次。虽无丝竹管弦之盛，一觞一咏，亦足以畅叙幽情。<p>是日也，天朗气清，惠风和畅。仰观宇宙之大，俯察品类之盛。所以游目骋怀，足以极视听之娱，信可乐也。<p>夫人之相与，俯仰一世，或取诸怀抱，悟言一室之内；或因寄所托，放浪形骸之外。虽趣（取/趋）舍万殊，静躁不同，当其欣于所遇，暂得于己，怏然自足，不知老之将至；及其所之既倦，情随事迁，感慨系之矣。向之所欣，俯仰之间，已为陈迹，犹不能不以之兴怀；况修短随化，终期于尽。古人云：“死生亦大矣。”岂不痛哉！<p>每揽（览）昔人兴感之由，若合一契，未尝不临文嗟悼，不能喻之于怀。固知一死生为虚诞，齐彭殇为妄作。后之视今，亦由（犹）今之视昔，悲夫！故列叙时人，录其所述，虽世殊事异，所以兴怀，其致一也。后之揽（览）者，亦将有感于斯文。<h2><a href="#big-image"aria-hidden="true"class="anchor"id="user-content-big-image"><span aria-hidden="true"class="octicon octicon-link"></span></a>Big image</h2><p><a href="/images/image_test/20190710190722.png"rel="noopener noreferrer"target="_blank"><img alt="Big image"src="/images/image_test/20190710190722.png"style="max-width:100%;"></a><h2><a href="#%E5%89%8D%E5%87%BA%E5%B8%88%E8%A1%A8"aria-hidden="true"class="anchor"id="user-content-前出师表"><span aria-hidden="true"class="octicon octicon-link"></span></a>前出师表</h2><p>臣亮言：先帝创业未半，而中道崩殂，今天下三分，益州疲弊，此诚危急存亡之秋也。然侍卫之臣，不懈于内，忠志之士，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气，不宜妄自菲薄，引喻失义，以塞忠谏之路也。<p>宫中府中，俱为一体，陟罚臧否，不宜异同。若有作奸犯科及为忠善者，宜付有司，论其刑赏，以昭陛下平明之理，不宜偏私，使内外异法也。<p>侍中、侍郎郭攸之、费祎、董允等，此皆良实，志虑忠纯，是以先帝简拔以遗陛下。愚以为宫中之事，事无大小，悉以咨之，然后施行，必能裨补阙漏，有所广益。<p>将军向宠，性行淑均，晓畅军事，试用于昔日，先帝称之曰“能”，是以众议举宠为督。愚以为营中之事，事无大小，悉以咨之，必能使行阵和睦，优劣得所也。<p>亲贤臣，远小人，此先汉所以兴隆也；亲小人，远贤臣，此后汉所以倾颓也。先帝在时，每与臣论此事，未尝不叹息痛恨于桓、灵也。侍中、尚书、长史、参军，此悉贞亮死节之臣也，愿陛下亲之信之，则汉室之隆，可计日而待也。<p>臣本布衣，躬耕于南阳，苟全性命于乱世，不求闻达于诸侯。先帝不以臣卑鄙，猥自枉屈，三顾臣于草庐之中，咨臣以当世之事，由是感激，遂许先帝以驱驰。后值倾覆，受任于败军之际，奉命于危难之间，尔来二十有一年矣。<p>先帝知臣谨慎，故临崩寄臣以大事也。受命以来，夙夜忧叹，恐托付不效，以伤先帝之明，故五月渡泸，深入不毛。今南方已定，兵甲已足，当奖率三军，北定中原，庶竭驽钝，攘除奸凶，兴复汉室，还于旧都。此臣所以报先帝，而忠陛下之职分也。至于斟酌损益，进尽忠言，则攸之、祎、允之任也。<p>愿陛下托臣以讨贼兴复之效；不效，则治臣之罪，以告先帝之灵。若无兴德之言，则责攸之、祎、允等之慢，以彰其咎。陛下亦宜自谋[2]，以咨诹善道，察纳雅言。深追先帝遗诏，臣不胜受恩感激。<p>今当远离，临表涕泣，不知所云。<h2><a href="#small-image-1"aria-hidden="true"class="anchor"id="user-content-small-image-1"><span aria-hidden="true"class="octicon octicon-link"></span></a>small image</h2><p><a href="/images/image_test/20190710191028.png"rel="noopener noreferrer"target="_blank"><img alt="small image"src="/images/image_test/20190710191028.png"style="max-width:100%;"></a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a href=&quot;#%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F&quot;aria-hidden=&quot;true&quot;class=&quot;anchor&quot;id=&quot;user-content-滕王阁序&quot;&gt;&lt;span aria-hidden=&quot;true&quot;class=&quot;oct
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git commit message 规范化与校验</title>
    <link href="https://zowiegong.com/posts/Git%20commit%20message.html"/>
    <id>https://zowiegong.com/posts/Git commit message.html</id>
    <published>2019-07-03T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<h2><a aria-hidden="true"class="anchor"href="#%E4%BD%BF%E7%94%A8-git-cz-%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%8F%90%E4%BA%A4-commit"id="user-content-使用-git-cz-交互式提交-commit"><span class="octicon octicon-link"aria-hidden="true"></span></a>使用 git-cz 交互式提交 commit</h2><p>安装 commitizen cli 命令行工具与 commitizen adapter 适配器（可以理解为 commit message 的模板）<pre><code>npm insatll commitizen cz-conventional-changelog --save-dev</code></pre><p><code>package.json</code>中配置<code>script</code>与<code>config</code>字段。<p><code>config.commitizen.path</code>为适配器名或路径。<pre><code>  "script": {    "commit": "git-cz"  },  ...  "config": {    "commitizen": {      "path": "cz-conventional-changelog"    }  }</code></pre><p>现在尝试使用<code>npm run commit</code>可以使用交互式模式提交 commit 了。<h2><a aria-hidden="true"class="anchor"href="#%E6%A0%A1%E9%AA%8C-commit-message"id="user-content-校验-commit-message"><span class="octicon octicon-link"aria-hidden="true"></span></a>校验 commit message</h2><p>安装 @commitlint/cli 命令行工具与 @commitlint/config-conventional 校验规则 npm 包。<div class="highlight highlight-source-shell"><pre><span class="pl-c"><span class="pl-c">#</span> 安装依赖</span>npm install @commitlint/config-conventional @commitlint/cli husky --save-dev<span class="pl-c"><span class="pl-c">#</span> 新建一个配置文件</span><span class="pl-c1">echo</span> <span class="pl-s"><span class="pl-pds">"</span>module.exports = {extends: ['@commitlint/config-conventional']}<span class="pl-pds">"</span></span> <span class="pl-k">&gt;</span> commitlint.config.js</pre></div><p>配置 husky git hook。<pre><code>{  "husky": {    "hooks": {      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"    }    }}</code></pre><p>现在试着随便提交一些 commit message，不符合规则的则会被 commitlin 提示并取消这次提交。]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a aria-hidden=&quot;true&quot;class=&quot;anchor&quot;href=&quot;#%E4%BD%BF%E7%94%A8-git-cz-%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%8F%90%E4%BA%A4-commit&quot;id=&quot;user-conten
      
    
    </summary>
    
      <category term="notes" scheme="https://zowiegong.com/categories/notes/"/>
    
    
      <category term="notes" scheme="https://zowiegong.com/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>配置 IPv6 与 Cloudflare DDNS</title>
    <link href="https://zowiegong.com/posts/%E9%85%8D%E7%BD%AEipv6%E5%B9%B6%E9%80%9A%E8%BF%87cloudflare%E8%BF%9B%E8%A1%8Cddns.html"/>
    <id>https://zowiegong.com/posts/配置ipv6并通过cloudflare进行ddns.html</id>
    <published>2019-06-10T16:00:00.000Z</published>
    <updated>2020-03-23T06:30:10.365Z</updated>
    
    <content type="html"><![CDATA[<h2><a href="#ipv6-%E9%85%8D%E7%BD%AE"aria-hidden="true"class="anchor"id="user-content-ipv6-配置"><span class="octicon octicon-link"aria-hidden="true"></span></a>IPv6 配置</h2><p>新办的电信 200M 光纤宽带没有 IPv4 外网地址，尝试获取 IPv6 地址。<h3><a href="#%E9%85%8D%E7%BD%AE%E5%85%89%E7%8C%AB"aria-hidden="true"class="anchor"id="user-content-配置光猫"><span class="octicon octicon-link"aria-hidden="true"></span></a>配置光猫</h3><p>超级管理员密码<code>nE7jA%5m</code>登陆光猫，<code>网络</code>-<code>网络设置</code>-<code>IP模式</code>选择<code>IPv4%IPv6</code>。<h3><a href="#%E8%B7%AF%E7%94%B1%E5%99%A8%E9%85%8D%E7%BD%AE"aria-hidden="true"class="anchor"id="user-content-路由器配置"><span class="octicon octicon-link"aria-hidden="true"></span></a>路由器配置</h3><p>启用 IPv6，连接类型<code>Native DHCPv6</code>、<code>Stateless:RA</code>，DNS 自动获取，内网 Ipv6 地址通过 DHCPv6 获取。<h3><a href="#%E9%87%8D%E6%96%B0%E6%8B%A8%E5%8F%B7"aria-hidden="true"class="anchor"id="user-content-重新拨号"><span class="octicon octicon-link"aria-hidden="true"></span></a>重新拨号</h3><p>重新拨号，此时路由器与内网设备应该能正常获取到 IPv6 地址。<p><a href="https://ipv6-test.com/"rel="nofollow noopener"target="_blank">IPv6 测试地址</a><h2><a href="#cloudflare-ddns"aria-hidden="true"class="anchor"id="user-content-cloudflare-ddns"><span class="octicon octicon-link"aria-hidden="true"></span></a>Cloudflare DDNS</h2><p>IPv6 为动态获取，需要做动态域名解析，确保外网能通过域名连接家里的设备。<p>可以通过 Cloudflare 提供的<a href="https://api.cloudflare.com/#dns-records-for-a-zone-update-dns-record"rel="nofollow noopener"target="_blank">API</a>进行更新。<h3><a href="#ddns"aria-hidden="true"class="anchor"id="user-content-ddns"><span class="octicon octicon-link"aria-hidden="true"></span></a>DDNS</h3><p>对于<code>Padavan</code>、<code>OpenWrt</code>等比较开放的路由器固件，可以使用下面的<a href="https://gist.github.com/zowiegong/6349d420789bb70aaebc7ce7eb1daccf"rel="noopener"target="_blank">Shell 脚本</a>进行 DDNS:<p>API token 在 Profile 页面底部查看。<p>zoneId、dnsId 分别通过<a href="https://api.cloudflare.com/#zone-list-zones"rel="nofollow noopener"target="_blank">List Zones</a>与<a href="https://api.cloudflare.com/#dns-records-for-a-zone-list-dns-records"rel="nofollow noopener"target="_blank">List DNS Records</a>两个接口获取。<div class="highlight highlight-source-shell"><pre><span class="pl-c"><span class="pl-c">#!</span>/bin/sh</span>EMAIL=CF_API_KEY=CF_ZONE_ID=CF_DNS_ID=DNS_RECORD=RECORD_TYPE=AAAAROUTER_NETWORK_DEVICE=<span class="pl-c"><span class="pl-c">#</span> 获取当前 DNS 记录</span>resolving_ip=<span class="pl-s"><span class="pl-pds">$(</span>curl -k -X GET <span class="pl-s"><span class="pl-pds">"</span>https://api.cloudflare.com/client/v4/zones/<span class="pl-smi">${CF_ZONE_ID}</span>/dns_records/<span class="pl-smi">${CF_DNS_ID}</span><span class="pl-pds">"</span></span> -H <span class="pl-s"><span class="pl-pds">"</span>X-Auth-Email:<span class="pl-smi">${EMAIL}</span><span class="pl-pds">"</span></span> -H <span class="pl-s"><span class="pl-pds">"</span>X-Auth-Key:<span class="pl-smi">${CF_API_KEY}</span><span class="pl-pds">"</span></span> -H <span class="pl-s"><span class="pl-pds">"</span>Content-Type: application/json<span class="pl-pds">"</span></span> <span class="pl-k">|</span> awk -F <span class="pl-s"><span class="pl-pds">'</span>"<span class="pl-pds">'</span></span> <span class="pl-s"><span class="pl-pds">'</span>{print $18}<span class="pl-pds">'</span></span><span class="pl-pds">)</span></span><span class="pl-c"><span class="pl-c">#</span> 获取本机 ipv6 地址</span>current_ip=<span class="pl-s"><span class="pl-pds">$(</span>ip -o -6 addr list <span class="pl-smi">$ROUTER_NETWORK_DEVICE</span> <span class="pl-k">|</span> awk <span class="pl-s"><span class="pl-pds">'</span>{print $4}<span class="pl-pds">'</span></span> <span class="pl-k">|</span> cut -d/ -f1 <span class="pl-k">|</span> head -n 1<span class="pl-pds">)</span></span><span class="pl-c1">echo</span> <span class="pl-s"><span class="pl-pds">"</span>当前解析 IP: <span class="pl-smi">$resolving_ip</span><span class="pl-pds">"</span></span><span class="pl-c1">echo</span> <span class="pl-s"><span class="pl-pds">"</span>当前本机 IP: <span class="pl-smi">$current_ip</span><span class="pl-pds">"</span></span><span class="pl-c"><span class="pl-c">#</span> 没有变化</span><span class="pl-k">if</span> [ <span class="pl-smi">$resolving_ip</span> <span class="pl-k">=</span> <span class="pl-smi">$current_ip</span> ]<span class="pl-k">;</span>    <span class="pl-k">then</span>    <span class="pl-c1">echo</span> <span class="pl-s"><span class="pl-pds">"</span>IP 未变化<span class="pl-pds">"</span></span><span class="pl-c"><span class="pl-c">#</span> 修改 DNS 记录</span><span class="pl-k">else</span>    <span class="pl-c1">echo</span> <span class="pl-s"><span class="pl-pds">"</span>更新解析记录<span class="pl-pds">"</span></span>    curl -k -X PUT <span class="pl-s"><span class="pl-pds">"</span>https://api.cloudflare.com/client/v4/zones/<span class="pl-smi">${CF_ZONE_ID}</span>/dns_records/<span class="pl-smi">${CF_DNS_ID}</span><span class="pl-pds">"</span></span> -H <span class="pl-s"><span class="pl-pds">"</span>X-Auth-Email:<span class="pl-smi">${EMAIL}</span><span class="pl-pds">"</span></span> -H <span class="pl-s"><span class="pl-pds">"</span>X-Auth-Key:<span class="pl-smi">${CF_API_KEY}</span><span class="pl-pds">"</span></span> -H <span class="pl-s"><span class="pl-pds">"</span>Content-Type: application/json<span class="pl-pds">"</span></span> --data <span class="pl-s"><span class="pl-pds">'</span>{"type":"<span class="pl-pds">'</span></span><span class="pl-smi">$RECORD_TYPE</span><span class="pl-s"><span class="pl-pds">'</span>","name":"<span class="pl-pds">'</span></span><span class="pl-smi">$DNS_RECORD</span><span class="pl-s"><span class="pl-pds">'</span>","content":"<span class="pl-pds">'</span></span><span class="pl-smi">$current_ip</span><span class="pl-s"><span class="pl-pds">'</span>"}<span class="pl-pds">'</span></span><span class="pl-k">fi</span><span class="pl-c1">echo</span> <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-pds">"</span></span></pre></div><h3><a href="#%E5%AE%9A%E6%97%B6%E6%9B%B4%E6%96%B0"aria-hidden="true"class="anchor"id="user-content-定时更新"><span class="octicon octicon-link"aria-hidden="true"></span></a>定时更新</h3><p>使用 crontab 定时更新解析记录。<p><code>0 * * * * /path/cloudflare_ddns.sh &gt;&gt; /path/ddns.log</code><p>每小时检查 IPv6 地址是否变化，然后更新解析记录，并输出日志到文件。]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a href=&quot;#ipv6-%E9%85%8D%E7%BD%AE&quot;aria-hidden=&quot;true&quot;class=&quot;anchor&quot;id=&quot;user-content-ipv6-配置&quot;&gt;&lt;span class=&quot;octicon octicon-link&quot;aria-hidde
      
    
    </summary>
    
      <category term="notes" scheme="https://zowiegong.com/categories/notes/"/>
    
    
      <category term="network" scheme="https://zowiegong.com/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>道德经</title>
    <link href="https://zowiegong.com/posts/Dao%20De%20Jing.html"/>
    <id>https://zowiegong.com/posts/Dao De Jing.html</id>
    <published>2019-04-11T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-1-%E7%AB%A0"id="user-content-第-1-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 1 章</h2><p>道可道，非常道。名可名，非常名。无名天地之始。有名万物之母。故常无欲以观其妙。常有欲以观其徼。此两者同出而异名，同谓之玄。玄之又玄，众妙之门。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-2-%E7%AB%A0"id="user-content-第-2-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 2 章</h2><p>天下皆知美之为美，斯恶矣；皆知善之为善，斯不善已。故有无相生，难易相成，长短相形，高下相倾，音声相和，前後相随。是以圣人处无为之事，行不言之教。万物作焉而不辞。生而不有，为而不恃，功成而弗居。夫唯弗居，是以不去。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-3-%E7%AB%A0"id="user-content-第-3-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 3 章</h2><p>不尚贤， 使民不争。不贵难得之货，使民不为盗。不见可欲，使民心不乱。是以圣人之治，虚其心，实其腹，弱其志，强其骨；常使民无知、无欲，使夫智者不敢为也。为无为，则无不治。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-4-%E7%AB%A0"id="user-content-第-4-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 4 章</h2><p>道冲而用之，或不盈。渊兮似万物之宗。解其纷，和其光，同其尘，湛兮似或存。吾不知谁之子，象帝之先。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-5-%E7%AB%A0"id="user-content-第-5-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 5 章</h2><p>天地不仁，以万物为刍狗。圣人不仁，以百姓为刍狗。天地之间，其犹橐迭乎？虚而不屈，动而愈出。多言数穷，不如守中。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-6-%E7%AB%A0"id="user-content-第-6-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 6 章</h2><p>谷神不死是谓玄牝。玄牝之门是谓天地根。绵绵若存，用之不勤。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-7-%E7%AB%A0"id="user-content-第-7-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 7 章</h2><p>天长地久。天地所以能长且久者，以其不自生，故能长生。是以圣人後其身而身先，外其身而身存。非以其无私邪！故能成其私。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-8-%E7%AB%A0"id="user-content-第-8-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 8 章</h2><p>上善若水。水善利万物而不争，处众人之所恶，故几於道。居善地，心善渊，与善仁，言善信，正善治，事善能，动善时。夫唯不争，故无尤。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-9-%E7%AB%A0"id="user-content-第-9-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 9 章</h2><p>持而盈之不如其己；揣而锐之不可长保；金玉满堂莫之能守；富贵而骄，自遗其咎。功遂身退，天之道。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-10-%E7%AB%A0"id="user-content-第-10-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 10 章</h2><p>载营魄抱一，能无离乎？专气致柔，能如婴儿乎？涤除玄览，能无疵乎？爱国治民，能无为乎？天门开阖，能为雌乎？明白四达，能无知乎。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-11-%E7%AB%A0"id="user-content-第-11-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 11 章</h2><p>三十幅共一毂，当其无，有车之用。埏埴以为器，当其无，有器之用。凿户牖以为室，当其无，有室之用。故有之以为利，无之以为用。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-12-%E7%AB%A0"id="user-content-第-12-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 12 章</h2><p>五色令人目盲，五音令人耳聋，五味令人口爽，驰骋畋猎令人心发狂，难得之货令人行妨。是以圣人，为腹不为目，故去彼取此。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-13-%E7%AB%A0"id="user-content-第-13-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 13 章</h2><p>宠辱若惊，贵大患若身。何谓宠辱若惊？宠为下。得之若惊失之若惊是谓宠辱若惊。何谓贵大患若身？吾所以有大患者，为吾有身，及吾无身，吾有何患。故贵以身为天下，若可寄天下。爱以身为天下，若可托天下。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-14-%E7%AB%A0"id="user-content-第-14-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 14 章</h2><p>视之不见名曰夷。听之不闻名曰希。抟之不得名曰微。此三者不可致诘，故混而为一。其上不皦(jiǎo)，其下不昧，绳绳不可名，复归於无物。是谓无状之状，无物之象，是谓惚恍。迎之不见其首，随之不见其後。执古之道以御今之有。能知古始，是谓道纪。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-15-%E7%AB%A0"id="user-content-第-15-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 15 章</h2><p>古之善为士者，微妙玄通，深不可识。夫唯不可识，故强为之容。豫兮若冬涉川；犹兮若畏四邻；俨兮其若容；涣兮若冰之将释；敦兮其若朴；旷兮其若谷；混兮其若浊；澹兮其若海；飉(liáo,风的声音)兮若无止。孰能浊以静之徐清。孰能安以动之徐生。保此道者不欲盈。夫唯不盈故能蔽而新成。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-16-%E7%AB%A0"id="user-content-第-16-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 16 章</h2><p>致虚极守静笃。万物并作，吾以观复。夫物芸芸各复归其根。归根曰静，是谓复命；复命曰常，知常曰明。不知常，妄作凶。知常容，容乃公，公乃全，全乃天，天乃道，道乃久，没身不殆。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-17-%E7%AB%A0"id="user-content-第-17-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 17 章</h2><p>太上，下知有之。其次，亲而誉之。其次，畏之。其次，侮之。信不足焉，有不信焉。悠兮其贵言，功成事遂，百姓皆谓∶我自然。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-18-%E7%AB%A0"id="user-content-第-18-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 18 章</h2><p>大道废有仁义；慧智出有大伪；六亲不和有孝慈；国家昏乱有忠臣。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-19-%E7%AB%A0"id="user-content-第-19-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 19 章</h2><p>绝圣弃智，民利百倍；绝仁弃义，民复孝慈；绝巧弃利，盗贼无有；此三者，以为文不足。故令有所属，见素抱朴少私寡欲。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-20-%E7%AB%A0"id="user-content-第-20-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 20 章</h2><p>绝学无忧，唯之与阿，相去几何？善之与恶，相去若何？人之所畏，不可不畏。荒兮其未央哉！众人熙熙如享太牢、如春登台。我独泊兮其未兆，如婴儿之未孩；儡儡(lěi,羸弱)兮若无所归。众人皆有馀，而我独若遗。我愚人之心也哉！沌沌兮。俗人昭昭，我独昏昏；俗人察察，我独闷闷。众人皆有以，而我独顽且鄙。我独异於人，而贵食母。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-21-%E7%AB%A0"id="user-content-第-21-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 21 章</h2><p>孔德之容惟道是从。道之为物惟恍惟惚。惚兮恍兮其中有象。恍兮惚兮其中有物。窈兮冥兮其中有精。其精甚真。其中有信。自古及今，其名不去以阅众甫。吾何以知众甫之状哉！以此。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-22-%E7%AB%A0"id="user-content-第-22-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 22 章</h2><p>曲则全，枉则直，洼则盈，敝则新少则得，多则惑。是以圣人抱一为天下式。不自见故明；不自是故彰；不自伐故有功；不自矜故长；夫唯不争，故天下莫能与之争。古之所谓∶曲则全者」岂虚言哉！诚全而归之。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-23-%E7%AB%A0"id="user-content-第-23-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 23 章</h2><p>希言自然。故飘风不终朝，骤雨不终日。孰为此者？天地。天地尚不能久，而况於人乎？故从事於道者，同於道。德者同於德。失者同於失。同於道者道亦乐得之；同於德者德亦乐得之；同於失者失於乐得之信不足焉有不信焉。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-24-%E7%AB%A0"id="user-content-第-24-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 24 章</h2><p>企者不立；跨者不行。自见者不明；自是者不彰。自伐者无功；自矜者不长。其在道也曰∶馀食赘形。物或恶之，故有道者不处。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-25-%E7%AB%A0"id="user-content-第-25-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 25 章</h2><p>有物混成先天地生。寂兮寥兮独立不改，周行而不殆，可以为天下母。吾不知其名，强字之曰道。强为之名曰大。大曰逝，逝曰远，远曰反。故道大、天大、地大、人亦大。域中有大，而人居其一焉。人法地，地法天，天法道，道法自然。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-26-%E7%AB%A0"id="user-content-第-26-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 26 章</h2><p>重为轻根，静为躁君。是以君子终日行不离轻重。虽有荣观燕处超然。奈何万乘之主而以身轻天下。轻则失根，躁则失君。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-27-%E7%AB%A0"id="user-content-第-27-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 27 章</h2><p>善行无辙迹。善言无瑕谪。善数不用筹策。善闭无关楗而不可开。善结无绳约而不可解。是以圣人常善救人，故无弃人。常善救物，故无弃物。是谓袭明。故善人者不善人之师。不善人者善人之资。不贵其师、不爱其资，虽智大迷，是谓要妙。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-28-%E7%AB%A0"id="user-content-第-28-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 28 章</h2><p>知其雄，守其雌，为天下溪。为天下溪，常德不离，复归於婴儿。知其白，守其黑，为天下式。为天下式，常德不忒，复归於无极。知其荣，守其辱，为天下谷。为天下谷，常德乃足，复归於朴。朴散则为器，圣人用之则为官长。故大制不割。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-29-%E7%AB%A0"id="user-content-第-29-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 29 章</h2><p>将欲取天下而为之，吾见其不得已。天下神器，不可为也，为者败之，执者失之。夫物或行或随、或觑或吹、或强或羸、或挫或隳。是以圣人去甚、去奢、去泰。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-30-%E7%AB%A0"id="user-content-第-30-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 30 章</h2><p>以道佐人主者，不以兵强天下。其事好还。师之所处荆棘生焉。军之後必有凶年。善有果而已，不敢以取强。果而勿矜。果而勿伐。果而勿骄。果而不得已。果而勿强。物壮则老，是谓不道，不道早已。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-31-%E7%AB%A0"id="user-content-第-31-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 31 章</h2><p>夫佳兵者不祥之器，物或恶之，故有道者不处。君子居则贵左，用兵则贵右。兵者不祥之器，非君子之器，不得已而用之，恬淡为上。胜而不美，而美之者，是乐杀人。夫乐杀人者，则不可得志於天下矣。吉事尚左，凶事尚右。偏将军居左，上将军居右。言以丧礼处之。杀人之众，以悲哀泣之，战胜以丧礼处之。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-32-%E7%AB%A0"id="user-content-第-32-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 32 章</h2><p>道常无名。朴虽小天下莫能臣也。侯王若能守之，万物将自宾。天地相合以降甘露，民莫之令而自均。始制有名，名亦既有，夫亦将知止，知止可以不殆。譬道之在天下，犹川谷之於江海。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-33-%E7%AB%A0"id="user-content-第-33-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 33 章</h2><p>知人者智，自知者明。胜人者有力，自胜者强。知足者富。强行者有志。不失其所者久。死而不亡者，寿。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-34-%E7%AB%A0"id="user-content-第-34-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 34 章</h2><p>大道泛兮，其可左右。万物恃之以生而不辞，功成而不名有。衣养万物而不为主，常无欲可名於小。万物归焉，而不为主，可名为大。以其终不自为大，故能成其大。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-35-%E7%AB%A0"id="user-content-第-35-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 35 章</h2><p>执大象天下往。往而不害安平太。乐与饵，过客止。道之出口淡乎其无味。视之不足见。听之不足闻。用之不足既。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-36-%E7%AB%A0"id="user-content-第-36-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 36 章</h2><p>将欲歙之，必固张之。将欲弱之，必固强之。将欲废之，必固兴之。将欲取之，必固与之。是谓微明。柔弱胜刚强。鱼不可脱於渊，国之利器不可以示人。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-37-%E7%AB%A0"id="user-content-第-37-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 37 章</h2><p>道常无为，而无不为。侯王若能守之，万物将自化。化而欲作，吾将镇之以无名之朴。无名之朴，夫亦将无欲。不欲以静，天下将自定。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-38-%E7%AB%A0"id="user-content-第-38-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 38 章</h2><p>上德不德是以有德。下德不失德是以无德。上德无为而无以为。下德无为而有以为。上仁为之而无以为。上义为之而有以为。上礼为之而莫之以应，则攘臂而扔之。故失道而後德。失德而後仁。失仁而後义。失义而後礼。夫礼者忠信之薄而乱之首。前识者，道之华而愚之始。是以大丈夫，处其厚不居其薄。处其实，不居其华。故去彼取此。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-39-%E7%AB%A0"id="user-content-第-39-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 39 章</h2><p>昔之得一者。天得一以清。地得一以宁。神得一以灵。谷得一以盈。万物得一以生。侯王得一以为天下贞。其致之。天无以清将恐裂。地无以宁将恐废。神无以灵将恐歇。谷无以盈将恐竭。万物无以生将恐灭。侯王无以贞将恐蹶。故贵以贱为本，高以下为基。是以侯王自称孤、寡、不谷。此非以贱为本邪？非乎。至誉无誉。不欲琭琭如玉，珞珞如石。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-40-%E7%AB%A0"id="user-content-第-40-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 40 章</h2><p>反者道之动。弱者道之用。天下万物生於有，有生於无。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-41-%E7%AB%A0"id="user-content-第-41-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 41 章</h2><p>上士闻道勤而行之。中士闻道若存若亡。下士闻道大笑之。不笑不足以为道。故建言有之。明道若昧。进道若退。夷道若纇。上德若谷。大白若辱。广德若不足。建德若偷。质真若渝。大方无隅。大器晚成。大音希声。大象无形。道隐无名。夫唯道善贷且成。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-42-%E7%AB%A0"id="user-content-第-42-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 42 章</h2><p>道生一。一生二。二生三。三生万物。万物负阴而抱阳，冲气以为和。人之所恶，唯孤、寡不谷，而王公以为称，故物或损之而益，或益之而损。人之所教，我亦教之，强梁者，不得其死。吾将以为教父。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-43-%E7%AB%A0"id="user-content-第-43-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 43 章</h2><p>天下之至柔，驰骋天下之至坚。无有入无间，吾是以知无为之有益。不言之教，无为之益天下希及之。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-44-%E7%AB%A0"id="user-content-第-44-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 44 章</h2><p>名与身孰亲。身与货孰多。得与亡孰病。是故甚爱必大费。多藏必厚亡。知足不辱。知止不殆。可以长久。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-45-%E7%AB%A0"id="user-content-第-45-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 45 章</h2><p>大成若缺，其用不弊。大盈若冲，其用不穷。大直若屈。大巧若拙。大辩若讷。静胜躁，寒胜热。清静为天下正。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-46-%E7%AB%A0"id="user-content-第-46-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 46 章</h2><p>天下有道，却走马以粪。天下无道，戎马生於郊。祸莫大於不知足。咎莫大於欲得。故知足之足常足矣。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-47-%E7%AB%A0"id="user-content-第-47-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 47 章</h2><p>不出户知天下。不窥牖见天道。其出弥远，其知弥少。是以圣人不行而知。不见而明。不为而成。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-48-%E7%AB%A0"id="user-content-第-48-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 48 章</h2><p>为学日益。为道日损。损之又损，以至於无为。无为而不为。取天下常以无事，及其有事，不足以取天下。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-49-%E7%AB%A0"id="user-content-第-49-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 49 章</h2><p>圣人无常心。以百姓心为心。善者吾善之。不善者吾亦善之，德善。信者吾信之。不信者吾亦信之，德信。圣人在天下，歙歙(xīxī,无所偏执的样子)焉，为天下浑其心。百姓皆注其耳目，圣人皆孩之。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-50-%E7%AB%A0"id="user-content-第-50-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 50 章</h2><p>出生入死。生之徒，十有三。死之徒，十有三。人之生，动之於死地，亦十有三。夫何故？以其生生之厚。盖闻善摄生者，陆行不遇凶虎，入军不被甲兵。凶无所投其角。虎无所用其爪。兵无所容其刃。夫何故？以其无死地。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-51-%E7%AB%A0"id="user-content-第-51-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 51 章</h2><p>道生之，德畜之，物形之，势成之。是以万物莫不尊道，而贵德。道之尊，德之贵，夫莫之命而常自然。故道生之，德畜之。长之育之。亭之毒之。养之覆之。生而不有，为而不恃，长而不宰。是谓玄德。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-52-%E7%AB%A0"id="user-content-第-52-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 52 章</h2><p>天下有始，以为天下母。既得其母，以知其子。既知其子，复守其母，没身不殆。塞其兑，闭其门，终身不勤。开其兑，济其事，终身不救。见其小曰明，守柔曰强。用其光，复归其明，无遗身殃。是为习常。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-53-%E7%AB%A0"id="user-content-第-53-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 53 章</h2><p>使我介然有知，行於大道，唯施是畏。大道甚夷，而人好径。朝甚除，田甚芜，仓甚虚。服文彩，带利剑，厌饮食，财货有馀。是谓盗夸。非道也哉。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-54-%E7%AB%A0"id="user-content-第-54-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 54 章</h2><p>善建者不拔。善抱者不脱。子孙以祭祀不辍。修之於身其德乃真。修之於家其德乃馀。修之於乡其德乃长。修之於邦其德乃丰。修之於天下其德乃普。故以身观身，以家观家，以乡观乡，以邦观邦，以天下观天下。吾何以知天下然哉？以此。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-55-%E7%AB%A0"id="user-content-第-55-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 55 章</h2><p>含德之厚比於赤子。毒虫不螫，猛兽不据，攫鸟不抟。骨弱筋柔而握固。未知牝牡之合而全作，精之至也。终日号而不嗄，和之至也。知和曰常。知常曰明。益生曰祥。心使气曰强。物壮则老。谓之不道，不道早已。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-56-%E7%AB%A0"id="user-content-第-56-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 56 章</h2><p>知者不言。言者不知。挫其锐，解其纷，和其光，同其尘，是谓玄同。故不可得而亲。不可得而疏。不可得而利。不可得而害。不可得而贵。不可得而贱。故为天下贵。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-57-%E7%AB%A0"id="user-content-第-57-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 57 章</h2><p>以正治国，以奇用兵，以无事取天下。吾何以知其然哉？以此。天下多忌讳而民弥贫。民多利器国家滋昏。人多伎巧奇物泫起。法令滋彰盗贼多有。故圣人云我无为而民自化。我好静而民自正。我无事而民自富。我无欲而民自朴。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-58-%E7%AB%A0"id="user-content-第-58-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 58 章</h2><p>其政闷闷，其民淳淳。其政察察，其民缺缺。祸尚福之所倚。福尚祸之所伏。孰知其极，其无正。正复为奇，善复为妖。人之迷其日固久。是以圣人方而不割。廉而不刿。直而不肆。光而不耀。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-59-%E7%AB%A0"id="user-content-第-59-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 59 章</h2><p>治人事天莫若啬。夫唯啬是谓早服。早服谓之重积德。重积德则无不克。无不克则莫知其极。莫知其极可以有国。有国之母可以长久。是谓深根固柢，长生久视之道。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-60-%E7%AB%A0"id="user-content-第-60-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 60 章</h2><p>治大国若烹小鲜。以道莅天下，其迨ㄞ哄非其鬼不神，其神不伤人。非其神不伤人，圣人亦不伤人。夫两不相伤，故德交归焉。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-61-%E7%AB%A0"id="user-content-第-61-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 61 章</h2><p>大国者下流，天下之交。天下之牝。牝常以静胜牡。以静为下。故大国以下小国，则取小国。小国以下大国，则取大国。故或下以取，或下而取。大国不过欲兼畜人。小国不过欲入事人。夫两者各得所欲，大者宜为下。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-62-%E7%AB%A0"id="user-content-第-62-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 62 章</h2><p>道者万物之奥。善人之宝，不善人之所保。美言可以市尊。美行可以加人。人之不善，何弃之有。故立天子、置三公，虽有拱璧以先驷马，不如坐进此道。古之所以贵此道者何。不曰∶求以得，有罪以免邪？故为天下贵。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-63-%E7%AB%A0"id="user-content-第-63-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 63 章</h2><p>为无为，事无事，味无味。大小多少，报怨以德。图难於其易，为大於其细。天下难事必作於易。天下大事必作於细。是以圣人终不为大，故能成其大。夫轻诺必寡信。多易必多难。是以圣人犹难之，故终无难矣。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-64-%E7%AB%A0"id="user-content-第-64-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 64 章</h2><p>其安易持，其未兆易谋。其脆易泮，其微易散。为之於未有，治之於未乱。合抱之木生於毫末。九层之台起於累土。千里之行始於足下。为者败之，执者失之。是以圣人无为故无败，无执故无失。民之从事常於几成而败之。慎终如始则无败事。是以圣人欲不欲，不贵难得之货。学不学，复众人之所过，以辅万物之自然而不敢为。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-65-%E7%AB%A0"id="user-content-第-65-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 65 章</h2><p>古之善为道者，非以明民，将以愚之。民之难治，以其智多。故以智治国，国之贼。不以智治国，国之福。知此两者，亦稽式。常知稽式，是谓玄德。玄德深矣、远矣！与物反矣。然後乃至大顺。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-66-%E7%AB%A0"id="user-content-第-66-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 66 章</h2><p>江海之所以能为百谷王者，以其善下之，故能为百谷王。是以圣人欲上民，必以言下之。欲先民，必以身後之。是以圣人处上而民不重，处前而民不害。是以天下乐推而不厌。以其不争，故天下莫能与之争。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-67-%E7%AB%A0"id="user-content-第-67-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 67 章</h2><p>天下皆谓我道大似不肖。夫唯大故似不肖。若肖，久矣！其细也夫。我有三宝持而保之∶一曰慈， 二曰俭，三曰不敢为天下先。慈故能勇，俭故能广，不敢为天下先故能成器长。今舍慈且勇，舍俭且广，舍後且先，死矣！夫慈以战则胜，以守则固。天将救之以慈卫之。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-68-%E7%AB%A0"id="user-content-第-68-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 68 章</h2><p>善为士者不武。善战者不怒。善胜敌者不与。善用人者为之下。是谓不争之德。是谓用人之力。是谓配天之极。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-69-%E7%AB%A0"id="user-content-第-69-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 69 章</h2><p>用兵有言，吾不敢为主而为客。不敢进寸而退尺。是谓行无行。攘无臂。扔无敌。执无兵。祸莫大於轻敌。轻敌几丧吾宝。故抗兵相加哀者胜矣。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-70-%E7%AB%A0"id="user-content-第-70-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 70 章</h2><p>吾言甚易知、甚易行。天下莫能知、莫能行。言有宗、事有君。夫唯无知，是以我不知。知我者希，则我者贵。是以圣被褐怀玉。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-71-%E7%AB%A0"id="user-content-第-71-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 71 章</h2><p>知不知上，不知知病。夫唯病病，是以不病。圣人不病，以其病病。夫唯病病，是以不病。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-72-%E7%AB%A0"id="user-content-第-72-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 72 章</h2><p>民不畏威，则大威至。无狎其所居，无厌其所生。夫唯不厌，是以不厌。是以圣人自知不自见。自爱不自贵。故去彼取此。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-73-%E7%AB%A0"id="user-content-第-73-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 73 章</h2><p>勇於敢则杀。勇於不敢则活。此两者或利或害。天之所恶孰知其故。天之道不争而善胜。不言而善应。不召而自来。繟(chǎn,舒缓)然而善谋。天网恢恢疏而不失。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-74-%E7%AB%A0"id="user-content-第-74-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 74 章</h2><p>民不畏死，奈何以死惧之。若使民常畏死，而为奇者，吾得执而杀之，孰敢。常有司杀者杀。夫代司杀者杀，是谓代大匠斫。夫代大匠斫者，希有不伤其手矣。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-75-%E7%AB%A0"id="user-content-第-75-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 75 章</h2><p>民之饥以其上食税之多，是以饥。民之难治以其上之有为，是以难治。民之轻死以其求生之厚，是以轻死。夫唯无以生为者，是贤於贵生。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-76-%E7%AB%A0"id="user-content-第-76-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 76 章</h2><p>人之生也柔弱，其死也坚强。草木之生也柔脆，其死也枯槁。故坚强者死之徒，柔弱者生之徒。是以兵强则灭，木强则折。强大处下，柔弱处上。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-77-%E7%AB%A0"id="user-content-第-77-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 77 章</h2><p>天之道其犹张弓与。高者抑之，下者举之。有馀者损之，不足者补之。天之道，损有馀而补不足。人之道，则不然，损不足以奉有馀。孰能有馀以奉天下，唯有道者。是以圣人为而不恃，功成而不处。其不欲见贤邪！<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-78-%E7%AB%A0"id="user-content-第-78-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 78 章</h2><p>天下莫柔弱於水。而攻坚强者，莫之能胜。以其无以易之。弱之胜强。柔之胜刚。天下莫不知莫能行。是以圣人云，受国之垢是谓社稷主。受国不祥是为天下王。正言若反。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-79-%E7%AB%A0"id="user-content-第-79-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 79 章</h2><p>和大怨必有馀怨，安可以为善。是以圣人执左契，而不责於人。有德司契，无德司彻。天道无亲常与善人。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-80-%E7%AB%A0"id="user-content-第-80-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 80 章</h2><p>小国寡民。使有什伯之器而不用。使民重死而不远徙。虽有舟舆无所乘之。虽有甲兵无所陈之。使民复结绳而用之。甘其食、美其服、安其居、乐其俗。邻国相望，鸡犬之声相闻。民至老死不相往来。<h2><a aria-hidden="true"class="anchor"href="#%E7%AC%AC-81-%E7%AB%A0"id="user-content-第-81-章"><span aria-hidden="true"class="octicon octicon-link"></span></a>第 81 章</h2><p>信言不美。美言不信。善者不辩。辩者不善。知者不博。博者不知。圣人不积。既以为人己愈有。既以与人己愈多。天之道利而不害。圣人之道为而不争。]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a aria-hidden=&quot;true&quot;class=&quot;anchor&quot;href=&quot;#%E7%AC%AC-1-%E7%AB%A0&quot;id=&quot;user-content-第-1-章&quot;&gt;&lt;span aria-hidden=&quot;true&quot;class=&quot;octicon octicon-l
      
    
    </summary>
    
      <category term="other" scheme="https://zowiegong.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>阳光十六法则与手动测光</title>
    <link href="https://zowiegong.com/posts/Sunny%2016%20rule.html"/>
    <id>https://zowiegong.com/posts/Sunny 16 rule.html</id>
    <published>2019-04-03T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<p>早期胶片相机通常没有测光功能，需要拍摄者通过经验估算曝光参数，阳光十六法则包含不同环境下曝光参数。<h2><a aria-hidden="true"class="anchor"href="#%E9%98%B3%E5%85%89%E5%8D%81%E5%85%AD%E6%B3%95%E5%88%99"id="user-content-阳光十六法则"><span aria-hidden="true"class="octicon octicon-link"></span></a>阳光十六法则</h2><blockquote><p>艳阳十六阴天八<p>多云十一日暮四<p>阴云压顶五点六<p>雨天落雪同日暮</blockquote><p>法则中的数值是快门速度为 ISO 的倒数时光圈的大小。<p>即在艳阳环境下使用 ISO 为 200 的胶卷时，快门设置为 1/200，光圈应设置为 F16。<p>在确定合适曝光参数之后可以根据实际情况进行换算。如果希望较浅的景深可以使用 F8 光圈，光圈增大两档之快门速度也应进行相应调整，设置为 1/800 后虽然使用了较大的光圈，但是曝光效果与之前相同。<h2><a aria-hidden="true"class="anchor"href="#%E5%85%89%E5%9C%88%E6%A1%A3%E4%BD%8D"id="user-content-光圈档位"><span aria-hidden="true"class="octicon octicon-link"></span></a>光圈档位</h2><h3><a aria-hidden="true"class="anchor"href="#%E6%95%B4%E7%BA%A7"id="user-content-整级"><span aria-hidden="true"class="octicon octicon-link"></span></a>整级</h3><p>F1.0、F1.4、F2.0、F2.8、F4.0、F5.6、F8.0、F11、F16、F22、F32<h3><a aria-hidden="true"class="anchor"href="#12-%E7%BA%A7"id="user-content-12-级"><span aria-hidden="true"class="octicon octicon-link"></span></a>1/2 级</h3><p>F1.0、F1.2、F1.4、F1.7、F2.0、F2.4、F2.8、F3.4（F3.5）、F4、F4.8（F4.5）、F5.6、F6.7、8、F9.5、F11、F13、F16、F19、F22、F27、F32<h2><a aria-hidden="true"class="anchor"href="#%E5%BF%AB%E9%97%A8%E6%A1%A3%E4%BD%8D"id="user-content-快门档位"><span aria-hidden="true"class="octicon octicon-link"></span></a>快门档位</h2><h3><a aria-hidden="true"class="anchor"href="#%E6%95%B4%E7%BA%A7-1"id="user-content-整级-1"><span aria-hidden="true"class="octicon octicon-link"></span></a>整级</h3><p>B门、1分、30、15、8、4、2、1、1/2、1/4、1/8、1/15、1/30、1/60、1/125、1/250、1/500、1/1000、1/2000、1/4000、1/8000<h3><a aria-hidden="true"class="anchor"href="#12-%E7%BA%A7-1"id="user-content-12-级-1"><span aria-hidden="true"class="octicon octicon-link"></span></a>1/2 级</h3><p>B门、8、5.6、4、2.8、2、1.4、1、0.7、1/2、1/3、1/4、1/6、1/8、1/10、1/15、1/20、1/30、1/45、1/60、1/90、1/125、1/180、1/250、1/350、1/500]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;早期胶片相机通常没有测光功能，需要拍摄者通过经验估算曝光参数，阳光十六法则包含不同环境下曝光参数。&lt;h2&gt;&lt;a aria-hidden=&quot;true&quot;class=&quot;anchor&quot;href=&quot;#%E9%98%B3%E5%85%89%E5%8D%81%E5%85%AD%E6%B3
      
    
    </summary>
    
      <category term="other" scheme="https://zowiegong.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>如何制作泡泡水</title>
    <link href="https://zowiegong.com/posts/Bubble%20water.html"/>
    <id>https://zowiegong.com/posts/Bubble water.html</id>
    <published>2019-03-17T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<h2><a aria-hidden="true"class="anchor"href="#%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%B3%A1%E6%B3%A1%E6%B0%B4"id="user-content-失败的泡泡水"><span aria-hidden="true"class="octicon octicon-link"></span></a>失败的泡泡水</h2><p>小卖部买的泡泡水用完之后会自己 DIY 制作。 通常会把家里一切能起泡泡的液体加入，肥皂、洗衣粉、洗洁精、沐浴露、洗手液等等。 但是这种不科学配方制作的泡泡水效果都不好。<h2><a aria-hidden="true"class="anchor"href="#%E7%90%86%E6%83%B3%E7%9A%84%E6%B3%A1%E6%B3%A1%E6%B0%B4"id="user-content-理想的泡泡水"><span aria-hidden="true"class="octicon octicon-link"></span></a>理想的泡泡水</h2><p>失败的泡泡水吹出来的泡泡壁厚蘸一次吹不出两个泡泡、颜色单调透明、太重飞不起来。<p>理想的泡泡水应该有以下优点：<ul><li>容易吹<li>吹出来的数量多<li>泡泡颜色鲜艳<li>泡泡重量轻<li>泡泡不易破<li>环保无毒</ul><h2><a aria-hidden="true"class="anchor"href="#%E9%85%8D%E6%96%B9%E6%9D%A5%E6%BA%90%E7%BD%91%E7%BB%9C"id="user-content-配方来源网络"><span aria-hidden="true"class="octicon octicon-link"></span></a>配方（来源网络）</h2><h3><a aria-hidden="true"class="anchor"href="#%E4%B8%83%E5%BD%A9%E6%B3%A1%E6%B3%A1%E6%B0%B4"id="user-content-七彩泡泡水"><span aria-hidden="true"class="octicon octicon-link"></span></a>七彩泡泡水</h3><p>水、洗洁精、洗发水（洗手液）、水、胶水，按 4:2:2:1 比例调配。<p>可另外加入砂糖、蓝墨水增加效果。<h3><a aria-hidden="true"class="anchor"href="#%E7%BA%A2%E8%8C%B6%E6%B3%A1%E6%B3%A1%E6%B0%B4"id="user-content-红茶泡泡水"><span aria-hidden="true"class="octicon octicon-link"></span></a>红茶泡泡水</h3><p>肥皂（洗涤剂）、砂糖、袋泡红茶，250ml 开水加入茶包，1-2 勺砂糖，加入适量肥皂片（洗涤剂）。<p>可加入甘油，泡泡不易破。<h3><a aria-hidden="true"class="anchor"href="#%E6%B4%97%E6%B4%81%E7%B2%BE%E7%AE%80%E6%98%93%E6%B3%A1%E6%B3%A1%E6%B0%B4"id="user-content-洗洁精简易泡泡水"><span aria-hidden="true"class="octicon octicon-link"></span></a>洗洁精简易泡泡水</h3><p>1 杯水＋1/3 杯洗洁精＋半勺白糖，搅拌均匀即可。]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a aria-hidden=&quot;true&quot;class=&quot;anchor&quot;href=&quot;#%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%B3%A1%E6%B3%A1%E6%B0%B4&quot;id=&quot;user-content-失败的泡泡水&quot;&gt;&lt;span aria-hid
      
    
    </summary>
    
      <category term="other" scheme="https://zowiegong.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>Axios 源码学习</title>
    <link href="https://zowiegong.com/posts/Axios%20source%20code.html"/>
    <id>https://zowiegong.com/posts/Axios source code.html</id>
    <published>2018-11-25T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<h2><a href="#main-file"aria-hidden="true"class="anchor"id="user-content-main-file"><span class="octicon octicon-link"aria-hidden="true"></span></a>Main file</h2><p>通过<code>package.json</code>找到入口文件<code>lib/axios.js</code>。<p>这里导出了<code>Axios</code>的实例，并在实例上挂载了<code>create</code>、<code>Cancel</code>、<code>CancelToken</code>、<code>isCancel</code>、<code>all</code>、<code>spread</code>等属性方法以及<code>Axios</code>构造函数。<h2><a href="#axios-class"aria-hidden="true"class="anchor"id="user-content-axios-class"><span class="octicon octicon-link"aria-hidden="true"></span></a>Axios class</h2><p>从入口文件顶部可以看到 Axios 类的构造函数位于<code>core/Axios.js</code>。<p>构造函数内部定义两个实例属性：<code>defaults</code>、<code>interceptors</code>。<p><code>defaults</code>为传入构造函数的参数。<p><code>interceptors</code>的两个属性分别是<code>request</code>与<code>response</code>，默认值都是<code>InterceptorManager</code>类的实例。<p>在<code>Axios</code>原型上定义有<code>request</code>、<code>getUri</code>两个方法。<p>在使用 axios 时通常有两种方式发起请求：<ol><li><code>axios.request(config)</code>或<code>axios.request(url[, config])</code><li><code>axios[method](url, config)</code>或<code>axios[method](url, data, config)</code></ol><p>这里在<code>Axios</code>内部将<code>delete</code>、<code>get</code>、<code>head</code>、<code>options</code>四种请求方式封装成不需要<code>data</code>参数形式，<p>将<code>post</code>、<code>put</code>、<code>patch</code>三种请求方式封装成需要<code>data</code>参数形式，<p>并最终调用<code>Axios.request</code>方法 Dispatch request。<h3><a href="#interceptormanager"aria-hidden="true"class="anchor"id="user-content-interceptormanager"><span class="octicon octicon-link"aria-hidden="true"></span></a>InterceptorManager</h3><p><code>InterceptorManager</code>类用管理拦截器。<p>实例属性<code>handlers</code>保存所有定义的拦截器。<p><code>interceptorManager.use</code>添加拦截器到<code>handlers</code>数组，并返回其索引。<p><code>interceptorManager.eject</code>通过 id (索引)移除拦截器。<p><code>interceptorManager.foeEach</code>遍历所有拦截器。<h3><a href="#axiosrequest"aria-hidden="true"class="anchor"id="user-content-axiosrequest"><span class="octicon octicon-link"aria-hidden="true"></span></a>axios.request</h3><p><code>axios.request</code>用来调度拦截器与控制请求发送。<p>在<code>request</code>方法内部首先对参数进行了兼容性处理，兼容<code>axios.request(config)</code>与<code>axios.request(url[, config])</code>两种形式的调用。<p>再将参数<code>config</code>与<code>this.defaults</code>属性，也就是实例化<code>Axios</code>类时传入的默认配置进行合并。<p>下面是<code>request</code>方法核心代码：<div class="highlight highlight-source-js"><pre>  <span class="pl-k">var</span> chain <span class="pl-k">=</span> [dispatchRequest, <span class="pl-c1">undefined</span>];  <span class="pl-k">var</span> promise <span class="pl-k">=</span> <span class="pl-c1">Promise</span>.<span class="pl-c1">resolve</span>(config);  <span class="pl-c1">this</span>.<span class="pl-smi">interceptors</span>.<span class="pl-smi">request</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> <span class="pl-en">unshiftRequestInterceptors</span>(<span class="pl-smi">interceptor</span>) {    <span class="pl-smi">chain</span>.<span class="pl-c1">unshift</span>(<span class="pl-smi">interceptor</span>.<span class="pl-smi">fulfilled</span>, <span class="pl-smi">interceptor</span>.<span class="pl-smi">rejected</span>);  });  <span class="pl-c1">this</span>.<span class="pl-smi">interceptors</span>.<span class="pl-smi">response</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> <span class="pl-en">pushResponseInterceptors</span>(<span class="pl-smi">interceptor</span>) {    <span class="pl-smi">chain</span>.<span class="pl-c1">push</span>(<span class="pl-smi">interceptor</span>.<span class="pl-smi">fulfilled</span>, <span class="pl-smi">interceptor</span>.<span class="pl-smi">rejected</span>);  });  <span class="pl-k">while</span> (<span class="pl-smi">chain</span>.<span class="pl-c1">length</span>) {    promise <span class="pl-k">=</span> <span class="pl-smi">promise</span>.<span class="pl-c1">then</span>(<span class="pl-smi">chain</span>.<span class="pl-c1">shift</span>(), <span class="pl-smi">chain</span>.<span class="pl-c1">shift</span>());  }</pre></div><p><code>chain</code>为待执行队列，默认有一个<code>dispatchRequest</code>用来发送请求。<p><code>promise</code>是一个<code>resolved</code>的<code>Promise</code>对象，默认返回<code>config</code>。<p>随后遍历所有拦截器，并将 request interceptors handlers 添加至执行队列头部，将 response interceptors handlers 添加到执行队列尾部。<p>最后遍历<code>chain</code>队列，执行 request 拦截器时<code>promise</code>变量中默认 resolve 的<code>config</code>对象被传入拦截器，最先添加的拦截器最后执行，拦截器第二个回调 catch 先执行拦截器中的错误，直到被<code>config</code>传入<code>dispatchRequest</code>。请求响应 response 依次传入 response 拦截器，执行顺序与 request 拦截器相反。<h2><a href="#dispatchrequest"aria-hidden="true"class="anchor"id="user-content-dispatchrequest"><span class="octicon octicon-link"aria-hidden="true"></span></a>dispatchRequest</h2><p>Axios 类用来调度拦截器与<code>dispatchRequest</code>方法，实际的请求则是由<code>dispatchRequest</code>处理请求<code>config</code>对象后适配不同平台然后进行发送的。<p><code>dispatchRequest</code>主要是对<code>config</code>对象进行一下处理：<ul><li>处理请求<code>config.url</code>，优先使用绝对路径<li>设置默认请求头为<code>{}</code><li>格式化 request data<li>处理默认<code>config.headers</code><li>调用适配后的方法发送请求<li>在最终发送请求的 Promise 回来后对 response 格式化，并 catch 错误</ul><h2><a href="#adapter"aria-hidden="true"class="anchor"id="user-content-adapter"><span class="octicon octicon-link"aria-hidden="true"></span></a>adapter</h2><p>axios 根据<code>process</code>判断是否为 node.js 环境，通过<a href="https://zh.wikipedia.org/zh-hans/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F"rel="nofollow noopener"target="_blank">适配器模式</a>兼容 node.js 与浏览器环境。<h3><a href="#xhr"aria-hidden="true"class="anchor"id="user-content-xhr"><span class="octicon octicon-link"aria-hidden="true"></span></a>XHR</h3><p><code>lib/adapters/xhr.js</code>的<code>xhrAdapter</code>方法适配浏览器环境。<p>接受一个<code>config</code>对象，并返回一个<code>Promise</code>对象。<p>请求最终通过<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest"rel="nofollow noopener"target="_blank"><code>XMLHttpRequest</code>类</a>实例<code>request</code>发送，方法内部通过<code>config</code>对象配置<code>request</code>。<p>调用<code>request.open</code>前做了如下判断：<ul><li>判断 request data 是否为 formData 格式<ul><li>如果是，删除<code>Content-Type</code>头，浏览器会自动配置</ul><li>判断是否配置<code>config.auth</code>HTTP basic authentication（<a href="https://zh.wikipedia.org/wiki/HTTP%E5%9F%BA%E6%9C%AC%E8%AE%A4%E8%AF%81"rel="nofollow noopener"target="_blank">基本认证</a>）<ul><li>如果是，将认证信息 Base64 编码在<code>Authorization</code>头内</ul></ul><p>调用 request.open 后配置 XHR Event handler:<ul><li>readystatechange 事件<ul><li>过滤未完成的请求<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/readyState"rel="nofollow noopener"target="_blank"><code>readyState</code></a>不为<code>4</code><li>处理<code>file:</code>协议请求成功<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/status"rel="nofollow noopener"target="_blank"><code>status</code></a>为<code>0</code><li>包装<code>response</code><li>通过<code>settle</code>方法 resolev promise</ul><li>abort 事件<ul><li>处理浏览器终止请求，抛出错误</ul><li>error 事件<ul><li>抛出错误</ul><li>timeout 事件<ul><li>抛出错误</ul></ul><p>继续根据<code>config</code>对象配置<code>request</code>：<ul><li>添加 xsfr 头<li>添加其余请求头<li>配置<code>request.withCredentials</code>属性<li>配置<code>request.responseType</code>属性<li>配置 progress 事件<li>配置 upload 事件<li>配置 abort 后的处理</ul><p>最后调用<code>request.send</code>发起 XHR 请求。]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a href=&quot;#main-file&quot;aria-hidden=&quot;true&quot;class=&quot;anchor&quot;id=&quot;user-content-main-file&quot;&gt;&lt;span class=&quot;octicon octicon-link&quot;aria-hidden=&quot;true&quot;&gt;&lt;/s
      
    
    </summary>
    
      <category term="notes" scheme="https://zowiegong.com/categories/notes/"/>
    
    
      <category term="source code" scheme="https://zowiegong.com/tags/source-code/"/>
    
  </entry>
  
  <entry>
    <title>尾调用优化</title>
    <link href="https://zowiegong.com/posts/Tail%20recursion.html"/>
    <id>https://zowiegong.com/posts/Tail recursion.html</id>
    <published>2018-10-10T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<p>当函数的调用层数非常多时，需要同时保存成千上百个调用记录，调用栈会消耗不少内存，甚容易导致<a href="https://zh.wikipedia.org/wiki/%E6%A0%88%E6%BA%A2%E5%87%BA"rel="nofollow noopener"target="_blank">栈溢出</a>。<p>尾调用的<a href="https://zh.wikipedia.org/wiki/%E5%91%BC%E5%8F%AB%E5%A0%86%E7%96%8A"rel="nofollow noopener"target="_blank">调用栈</a>则特别易于优化，从而可减少内存空间的使用，也能提高运行速度。<h2><a href="#%E5%B0%BE%E8%B0%83%E7%94%A8"aria-hidden="true"class="anchor"id="user-content-尾调用"><span class="octicon octicon-link"aria-hidden="true"></span></a>尾调用</h2><p><strong>尾调用</strong>(tail call) 指的是一个函数的最后一条语句是一个返回调用函数的语句。<div class="highlight highlight-source-js"><pre><span class="pl-c"><span class="pl-c">//</span> 属于尾调用</span><span class="pl-k">function</span> <span class="pl-en">bar</span>(<span class="pl-smi">data</span>) {    <span class="pl-k">if</span> ( <span class="pl-en">a</span>(data) ) {        <span class="pl-k">return</span> <span class="pl-en">b</span>(data);    }    <span class="pl-k">return</span> <span class="pl-en">c</span>(data);}<span class="pl-k">function</span> <span class="pl-en">foo</span>(<span class="pl-smi">data</span>) {    <span class="pl-en">a</span>(data);    <span class="pl-k">return</span> <span class="pl-en">b</span>(data);}</pre></div><div class="highlight highlight-source-js"><pre><span class="pl-c"><span class="pl-c">//</span> 不属于尾调用</span><span class="pl-k">function</span> <span class="pl-en">foo1</span>(<span class="pl-smi">data</span>) {    <span class="pl-k">return</span> <span class="pl-en">a</span>(data) <span class="pl-k">+</span> <span class="pl-c1">1</span>;}<span class="pl-k">function</span> <span class="pl-en">foo2</span>(<span class="pl-smi">data</span>) {    <span class="pl-k">var</span> ret <span class="pl-k">=</span> <span class="pl-en">a</span>(data);    <span class="pl-k">return</span> ret;}</pre></div><h3><a href="#%E8%B0%83%E7%94%A8%E6%A0%88"aria-hidden="true"class="anchor"id="user-content-调用栈"><span class="octicon octicon-link"aria-hidden="true"></span></a>调用栈</h3><p>当一个函数被调用时，函数的调用位置与返回位置被保存在调用栈中，调用结束时才能带着返回值回到该位置。<p>在尾调用这种特殊情形中，计算机理论上可以不需要记住尾调用的位置而从被调用的函数直接带着返回值返回调用函数的返回位置。<p>尾调用消除即是在不改变当前调用栈（也不添加新的返回位置）的情况下跳到新函数的一种优化。<h2><a href="#%E5%B0%BE%E9%80%92%E5%BD%92"aria-hidden="true"class="anchor"id="user-content-尾递归"><span class="octicon octicon-link"aria-hidden="true"></span></a>尾递归</h2><p>在尾调用的情况下<strong>调用自身</strong>的特殊尾调用称为<strong>尾递归</strong>。<h3><a href="#%E4%BC%98%E5%8C%96%E5%B0%BE%E9%80%92%E5%BD%92%E7%9A%84%E5%88%86%E6%9E%90"aria-hidden="true"class="anchor"id="user-content-优化尾递归的分析"><span class="octicon octicon-link"aria-hidden="true"></span></a>优化尾递归的分析</h3><p>由于函数自身调用次数很多，递归层级很深，尾递归优化则使原本 O(n) 的调用栈空间只需要 O(1)。<p>"尾调用优化"对递归操作意义重大，ES6 中明确规定，所有 ECMAScript 的实现，都必须部署"尾调用优化"。<p>所以在 ES6 中，只要使用尾递归，就不会发生栈溢出，相对节省内存。<p>现有<code>recsum</code>函数如下：<div class="highlight highlight-source-js"><pre><span class="pl-k">function</span> <span class="pl-en">recsum</span> (<span class="pl-smi">num</span>) {    <span class="pl-k">if</span> (num <span class="pl-k">===</span> <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-c1">1</span>    <span class="pl-k">else</span> <span class="pl-k">return</span> num <span class="pl-k">+</span> <span class="pl-en">recsum</span>(num <span class="pl-k">-</span> <span class="pl-c1">1</span>)}</pre></div><p>调用<code>recsum(5)</code>为例:<pre><code>recsum(5)5 + recsum(4)5 + (4 + recsum(3))5 + (4 + (3 + recsum(2)))5 + (4 + (3 + (2 + recsum(1))))5 + (4 + (3 + (2 + 1)))5 + (4 + (3 + 3))5 + (4 + 6)5 + 1015</code></pre><p>堆栈从左到右，增加到一个峰值后再计算从右到左缩小。<p>修改以上代码，可以成为尾递归：<div class="highlight highlight-source-js"><pre><span class="pl-k">function</span> <span class="pl-en">tailrecsum</span> (<span class="pl-smi">num</span>, <span class="pl-smi">running_total</span><span class="pl-k">=</span><span class="pl-c1">0</span>) {    <span class="pl-k">if</span> (num <span class="pl-k">===</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span> running_total    <span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-en">tailrecsum</span>(num <span class="pl-k">-</span> <span class="pl-c1">1</span>, running_total <span class="pl-k">+</span> num)}</pre></div><p>后者尾递归对内存的消耗<pre><code>tailrecsum(5, 0) tailrecsum(4, 5) tailrecsum(3, 9)tailrecsum(2, 12) tailrecsum(1, 14) tailrecsum(0, 15) 15</code></pre><h3><a href="#%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E7%9A%84%E4%BF%AE%E6%94%B9"aria-hidden="true"class="anchor"id="user-content-递归函数的修改"><span class="octicon octicon-link"aria-hidden="true"></span></a>递归函数的修改</h3><p>由于要实现尾调用优化，函数的调用栈不在增加所以无法保持函数的局部变量，需要将局部变量以参数的形式传入，如上面的例子，来实现尾调用的优化。<p>递归本质上是一种循环操作。纯粹的函数式编程语言没有循环操作命令，所有的循环都用递归实现，这就是为什么尾递归对这些语言极其重要。<p>对于其他支持"尾调用优化"的语言（比如Lua，ES6），只需要知道循环可以用递归代替，而一旦使用递归，就最好使用尾递归。]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当函数的调用层数非常多时，需要同时保存成千上百个调用记录，调用栈会消耗不少内存，甚容易导致&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%A0%88%E6%BA%A2%E5%87%BA&quot;rel=&quot;nofollow noopener&quot;ta
      
    
    </summary>
    
      <category term="notes" scheme="https://zowiegong.com/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>Javascript 并发模型与事件循环</title>
    <link href="https://zowiegong.com/posts/Javascript%20eventloop.html"/>
    <id>https://zowiegong.com/posts/Javascript eventloop.html</id>
    <published>2018-10-09T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<p>Javascript 作为单线程的脚本语言，通过事件循环机制（event-loop）实现其 “非阻塞” 的特性。<h2><a href="#%E8%BF%90%E8%A1%8C%E6%97%B6%E6%A6%82%E5%BF%B5"aria-hidden="true"class="anchor"id="user-content-运行时概念"><span class="octicon octicon-link"aria-hidden="true"></span></a>运行时概念</h2><h3><a href="#%E6%A0%88"aria-hidden="true"class="anchor"id="user-content-栈"><span class="octicon octicon-link"aria-hidden="true"></span></a>栈</h3><p>函数的调用会形成栈帧，最外层函数的栈帧被压入栈的最底层，当最外层的函数返回后，栈就空了。<h3><a href="#%E5%A0%86"aria-hidden="true"class="anchor"id="user-content-堆"><span class="octicon octicon-link"aria-hidden="true"></span></a>堆</h3><p>堆表示一个大部分非结构化的内存区域，对象被分配在堆中。<h3><a href="#%E9%98%9F%E5%88%97"aria-hidden="true"class="anchor"id="user-content-队列"><span class="octicon octicon-link"aria-hidden="true"></span></a>队列</h3><p>JavaScript 运行时包含了一个待处理的消息队列。队列中的每个消息都有对应的处理函数。<h2><a href="#%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF"aria-hidden="true"class="anchor"id="user-content-事件循环"><span class="octicon octicon-link"aria-hidden="true"></span></a>事件循环</h2><p>事件循环的实现简单来说如下：<div class="highlight highlight-source-js"><pre><span class="pl-k">while</span> (<span class="pl-smi">queue</span>.<span class="pl-en">waitForMessage</span>()) {    <span class="pl-smi">queue</span>.<span class="pl-en">processNextMessage</span>();}</pre></div><h3><a href="#%E6%89%A7%E8%A1%8C%E8%87%B3%E5%AE%8C%E6%88%90"aria-hidden="true"class="anchor"id="user-content-执行至完成"><span class="octicon octicon-link"aria-hidden="true"></span></a>执行至完成</h3><p>每一个消息完整的执行后，其它消息才会被执行。<h3><a href="#%E6%B7%BB%E5%8A%A0%E6%B6%88%E6%81%AF"aria-hidden="true"class="anchor"id="user-content-添加消息"><span class="octicon octicon-link"aria-hidden="true"></span></a>添加消息</h3><p>当一个事件出现且有一个事件监听器被绑定时，消息会被随时添加。<p>如果没有事件监听器，事件会丢失。<p>调用<code>setTimeout</code>函数会在一个时间段过去后在队列中添加一个消息。<p>这个时间段作为函数的第二个参数被传入,时间参数的值代表了消息被实际加入到队列的最小延迟时间。<p>如果队列中没有其它消息，消息会被马上处理。<h3><a href="#%E9%9B%B6%E5%BB%B6%E8%BF%9F"aria-hidden="true"class="anchor"id="user-content-零延迟"><span class="octicon octicon-link"aria-hidden="true"></span></a>零延迟</h3><p>在零延迟调用<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WindowTimers/setTimeout"rel="nofollow noopener"target="_blank"><code>setTimeout</code></a>时，其并不是过了给定的时间间隔后就马上执行回调函数。<p>其等待的时间基于队列里正在等待的消息数量。<h3><a href="#%E5%A4%9A%E4%B8%AA%E8%BF%90%E8%A1%8C%E6%97%B6%E4%BA%92%E7%9B%B8%E9%80%9A%E4%BF%A1"aria-hidden="true"class="anchor"id="user-content-多个运行时互相通信"><span class="octicon octicon-link"aria-hidden="true"></span></a>多个运行时互相通信</h3><p>一个 web worker 或者一个跨域的<code>iframe</code>都有自己的栈，堆和消息队列。<p>两个不同的运行时只能通过<code>postMessage</code>方法进行通信。<p>如果后者侦听到<code>message</code>事件，则此方法会向其他运行时添加消息。<h2><a href="#%E5%85%B6%E4%BB%96"aria-hidden="true"class="anchor"id="user-content-其他"><span class="octicon octicon-link"aria-hidden="true"></span></a>其他</h2><h3><a href="#%E9%98%BB%E5%A1%9E%E4%B8%8E%E6%AD%BB%E5%BE%AA%E7%8E%AF"aria-hidden="true"class="anchor"id="user-content-阻塞与死循环"><span class="octicon octicon-link"aria-hidden="true"></span></a>阻塞与死循环</h3><p>由于 “执行至完成” 的特性，当一个消息需要太长时间才能完成，如遇到了死循环，Web应用无法处理用户的交互，例如点击或滚动。<p>Q：这时 Js 的执行状态是否是阻塞的？ 是否与 JavaScript 非阻塞的特性矛盾？<p>A：不矛盾。阻塞是等待响应，代码处于停止状态。死循环是执行重复的代码导致耗尽计算机资源。]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Javascript 作为单线程的脚本语言，通过事件循环机制（event-loop）实现其 “非阻塞” 的特性。&lt;h2&gt;&lt;a href=&quot;#%E8%BF%90%E8%A1%8C%E6%97%B6%E6%A6%82%E5%BF%B5&quot;aria-hidden=&quot;true&quot;cla
      
    
    </summary>
    
      <category term="notes" scheme="https://zowiegong.com/categories/notes/"/>
    
    
      <category term="javascript" scheme="https://zowiegong.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>使用 Anaconda</title>
    <link href="https://zowiegong.com/posts/Use%20anaconda.html"/>
    <id>https://zowiegong.com/posts/Use anaconda.html</id>
    <published>2018-07-10T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zh.wikipedia.org/wiki/Anaconda_(Python%E5%8F%91%E8%A1%8C%E7%89%88)"rel="nofollow noopener"target="_blank">Wiki</a>介绍<a href="https://anaconda.org/"rel="nofollow noopener"target="_blank">Anaconda</a>是一种 Python 的免费增值开源发行版，用于进行大规模数据处理, 预测分析, 和科学计算, 致力于简化包的管理和部署。<p>简单来说，Anaconda 提供了一个包含 Ptyhon 、conda 以及常用第三方包的环境。<h2><a href="#%E5%8A%9F%E8%83%BD"aria-hidden="true"class="anchor"id="user-content-功能"><span class="octicon octicon-link"aria-hidden="true"></span></a>功能</h2><p>在 Anaconda 下，不同的项目使用独立的开发环境，不同的开发环境下使用不同的 Python 版本，并且包互相隔离。<h2><a href="#%E5%AE%89%E8%A3%85"aria-hidden="true"class="anchor"id="user-content-安装"><span class="octicon octicon-link"aria-hidden="true"></span></a>安装</h2><p><a href="https://www.anaconda.com/download/"rel="nofollow noopener"target="_blank">官方</a>、<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/"rel="nofollow noopener"target="_blank">镜像</a>下载安装。<h2><a href="#conda"aria-hidden="true"class="anchor"id="user-content-conda"><span class="octicon octicon-link"aria-hidden="true"></span></a>conda</h2><p><a href="https://conda.io/docs/"rel="nofollow noopener"target="_blank">conda</a>的主要功能就是<strong>环境管理</strong>与<strong>包管理</strong>。<p>像是结合了<a href="https://virtualenv.pypa.io/en/stable/"rel="nofollow noopener"target="_blank">virtualenv</a>与<a href="https://pypi.org/project/pip/"rel="nofollow noopener"target="_blank">pip</a>。<p>或者用熟悉的 node.js 来打比方， conda 结合了环境管理(<a href="https://github.com/creationix/nvm"rel="noopener"target="_blank">nvm</a>) 与 包管理器(<a href="https://www.npmjs.com/"rel="nofollow noopener"target="_blank">npm</a>、<a href="https://yarnpkg.com/lang/en/"rel="nofollow noopener"target="_blank">yarn</a>...)的功能。<p>不同的是 conda 将几乎所有的工具、第三方包都当做 package 对待，比如 VScode 是一个 package，不同版本的 Python 是一个 package, conda 本身也是一个 package。<h3><a href="#%E7%AE%A1%E7%90%86-conda"aria-hidden="true"class="anchor"id="user-content-管理-conda"><span class="octicon octicon-link"aria-hidden="true"></span></a>管理 conda</h3><p>Windows 下如果已经将<code>%Anaconda%/Scripts</code>添加到环境变量，可以直接在 Cmd 下使用， 没有添加的可以从开始菜单找到<code>Anaconda Prompt</code>启动开始使用。<p>初次使用可以尝试更新：<div class="highlight highlight-source-shell"><pre>conda --versionconda update conda<span class="pl-c"><span class="pl-c">#</span> Proceed([y]/n)? y</span></pre></div><h3><a href="#%E7%AE%A1%E7%90%86%E7%8E%AF%E5%A2%83"aria-hidden="true"class="anchor"id="user-content-管理环境"><span class="octicon octicon-link"aria-hidden="true"></span></a>管理环境</h3><p>可以使用<code>conda info --envs</code>查看所有的环境，conda 会有一个默认环境<code>root</code>， 其中带<code>*</code>号的为当前环境。<p>创建一个<code>snowflakes</code>环境并安装 BioPython包：<ol><li><code>conda create --name snowflakes biopython</code>conda 会检查 biopython 的依赖，并提示是否继续。<li><code>activate snowflakes</code>激活环境之后，就处于<code>snowflakes</code>之下了。<li><code>deactivate</code>回到默认环境<code>root</code>。</ol><p>linux/macOs 下应使用<code>source activate snowflakes</code>或<code>source deactivate</code>。<p>新环境中的 Python 版本与安装 Anaconda 的 Python 版本相同， 可以使用<code>conda create --name snakes python=3.5</code>指定所需的 Python 版本。<h3><a href="#%E7%AE%A1%E7%90%86%E5%8C%85"aria-hidden="true"class="anchor"id="user-content-管理包"><span class="octicon octicon-link"aria-hidden="true"></span></a>管理包</h3><p>查看当前环境下的包：<code>conda list</code>。<p>检查是否可以从 Anaconda 源中获取 package：<code>conda search scrapy</code>。<p>安装到当前环境：<code>conda install scrapy</code>。<h2><a href="#%E6%9B%B4%E5%A4%9A%E4%BF%A1%E6%81%AF"aria-hidden="true"class="anchor"id="user-content-更多信息"><span class="octicon octicon-link"aria-hidden="true"></span></a>更多信息</h2><ul><li><a href="https://conda.io/docs/"rel="nofollow noopener"target="_blank">conda</a><li><a href="https://docs.anaconda.com/anaconda-cloud/user-guide/"rel="nofollow noopener"target="_blank">anaconda</a></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/Anaconda_(Python%E5%8F%91%E8%A1%8C%E7%89%88)&quot;rel=&quot;nofollow noopener&quot;target=&quot;_blank&quot;&gt;Wiki&lt;/a&gt;介绍&lt;a h
      
    
    </summary>
    
      <category term="notes" scheme="https://zowiegong.com/categories/notes/"/>
    
    
      <category term="python" scheme="https://zowiegong.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>LED 限流电阻计算</title>
    <link href="https://zowiegong.com/posts/Led%20resistor.html"/>
    <id>https://zowiegong.com/posts/Led resistor.html</id>
    <published>2018-07-02T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<p>LED 发光二极管限流电阻阻值计算。<h2><a href="#%E4%B8%80%E4%BA%9B%E5%8F%82%E6%95%B0"aria-hidden="true"class="anchor"id="user-content-一些参数"><span aria-hidden="true"class="octicon octicon-link"></span></a>一些参数</h2><ul><li><code>PM</code>允许功耗，超过会烧毁<li><code>IFM</code>最大正向电流，超过会烧毁<li><code>VRM</code>最大反向电压，超过会击穿<li><code>IF</code>正向导通电流，一般为<code>0.6 * IFM</code><li><code>VF</code>正向导通电压，一般为<code>IF = 20mA</code>时取得，<code>1.4V - 3V</code>不同颜色电压不同</ul><p>LED 正常工作不应超过<code>PM</code>、<code>IFM</code>、<code>VRM</code>这三个极限参数。<h2><a href="#%E9%99%90%E6%B5%81%E7%94%B5%E9%98%BB%E8%AE%A1%E7%AE%97"aria-hidden="true"class="anchor"id="user-content-限流电阻计算"><span aria-hidden="true"class="octicon octicon-link"></span></a>限流电阻计算</h2><p><a href="https://raw.githubusercontent.com/zowiegong/hexo-blog/master/source/images/20190722121759.png"rel="nofollow"target="_blank"><img alt="原理图"src="https://raw.githubusercontent.com/zowiegong/hexo-blog/master/source/images/20190722121759.png"style="max-width:100%;"></a><p>假设 LED1<code>VF=3V</code>、<code>IF=20mA</code>，电源电压为<code>Vcc=5V</code>。<p>则<code>R1</code>上分得电压<code>Ur1 = Vcc - VF = 5 - 3 = 2V</code><p>要是使得<code>LED1</code>上的电流为<code>20mA</code>，根据<code>R = U / I</code><p>则<code>R1</code>的电阻值应该为<code>R1 = Ur1 / IF = 2 / 0.02 = 100Ω</code><h2><a href="#%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F"aria-hidden="true"class="anchor"id="user-content-计算公式"><span aria-hidden="true"class="octicon octicon-link"></span></a>计算公式</h2><p>得到 LED 限流电阻计算公式为：<code>R = (UV - VF) / IF</code><ul><li><code>R</code>限流电阻阻值<li><code>UV</code>电源电压<li><code>VF</code>LED 正向导通电压<li><code>IF</code>LED 正向导通电流</ul><h2><a href="#%E5%85%B6%E4%BB%96"aria-hidden="true"class="anchor"id="user-content-其他"><span aria-hidden="true"class="octicon octicon-link"></span></a>其他</h2><p><a href="http://www.dianziaihaozhe.com/gongju/LED_xianliudianzu/"rel="nofollow noopener"target="_blank">LED限流电阻在线计算</a><p>原理图由<a href="https://easyeda.com"rel="nofollow noopener"target="_blank">EasyEDA</a>绘制]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;LED 发光二极管限流电阻阻值计算。&lt;h2&gt;&lt;a href=&quot;#%E4%B8%80%E4%BA%9B%E5%8F%82%E6%95%B0&quot;aria-hidden=&quot;true&quot;class=&quot;anchor&quot;id=&quot;user-content-一些参数&quot;&gt;&lt;span aria-hi
      
    
    </summary>
    
      <category term="other" scheme="https://zowiegong.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>一些软件</title>
    <link href="https://zowiegong.com/posts/Some%20software.html"/>
    <id>https://zowiegong.com/posts/Some software.html</id>
    <published>2018-06-27T16:00:00.000Z</published>
    <updated>2020-01-18T05:52:05.335Z</updated>
    
    <content type="html"><![CDATA[<h2><a href="#%E9%80%9A%E8%AE%AF"aria-hidden="true"class="anchor"id="user-content-通讯"><span aria-hidden="true"class="octicon octicon-link"></span></a>通讯</h2><h3><a href="#tox"aria-hidden="true"class="anchor"id="user-content-tox"><span aria-hidden="true"class="octicon octicon-link"></span></a>Tox</h3><p><a href="https://tox.chat/"rel="nofollow noopener"target="_blank">Tox</a>是基于DHT(BitTorrent)分布式加密通讯协议。<p>优点：加密通讯、去中心化、开源、跨平台。<p>缺点：Tox 不会隐藏 IP，最好配合前置代理使用。<p>我的 Tox ID: AFCCF84CB357CFC3A5326D12411ED0FB4227DF0768B273238C09FD6F27BADC24CBFD7F7ACA1F<h3><a href="#signal"aria-hidden="true"class="anchor"id="user-content-signal"><span aria-hidden="true"class="octicon octicon-link"></span></a>Signal</h3><p><a href="https://signal.org/"rel="nofollow noopener"target="_blank">Signal</a>是一个跨平台端到端加密的即时语音视频软件，客户端是按GPLv3授权的自由及开放源代码软件，服务器端的代码则按AGPLv3发布。<p>优点：默认端到端加密、开源、跨平台。<p>缺点：注册需要手机号码。<h3><a href="#telegram"aria-hidden="true"class="anchor"id="user-content-telegram"><span aria-hidden="true"class="octicon octicon-link"></span></a>Telegram</h3><p><a href="https://telegram.org/"rel="nofollow noopener"target="_blank">Telegram</a>是一个跨平台的即时语音视频软件，它的客户端是自由及开放源代码软件，但是它的服务器是<strong>专有软件</strong>，注册需要<strong>手机号码</strong>。<p>优点：支持群组、开放 API、跨平台。<p>缺点：默认不启用端到端加密、服务端未开源、注册需要手机号码。<h2><a href="#%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86"aria-hidden="true"class="anchor"id="user-content-密码管理"><span aria-hidden="true"class="octicon octicon-link"></span></a>密码管理</h2><h3><a href="#keepassxc"aria-hidden="true"class="anchor"id="user-content-keepassxc"><span aria-hidden="true"class="octicon octicon-link"></span></a>KeePassXC</h3><p><a href="https://keepassxc.org/"rel="nofollow noopener"target="_blank">KeePassXC</a>是<a href="https://zh.wikipedia.org/zh-hans/%E7%94%B5%E5%AD%90%E5%89%8D%E5%93%A8%E5%9F%BA%E9%87%91%E4%BC%9A"rel="nofollow noopener"target="_blank">EEF</a>推荐的一款密码管理工具，是<a href="https://keepass.info/"rel="nofollow noopener"target="_blank">keepass</a>的跨平台分支。<p>优点: 开源、跨平台。<p>缺点: 密钥库文件同步比较麻烦。<h2><a href="#%E5%8A%A0%E5%AF%86"aria-hidden="true"class="anchor"id="user-content-加密"><span aria-hidden="true"class="octicon octicon-link"></span></a>加密</h2><h3><a href="#veracrypt"aria-hidden="true"class="anchor"id="user-content-veracrypt"><span aria-hidden="true"class="octicon octicon-link"></span></a>VeraCrypt</h3><p><a href="https://veracrypt.codeplex.com/"rel="nofollow noopener"target="_blank">VeraCrypt</a>是已经停止开发的<a href="http://truecrypt.sourceforge.net/"rel="nofollow noopener"target="_blank">TrueCrypt</a>项目的一个分支，可以创建一个虚拟加密磁盘文件或加密分区，或预引导认证整个存储设备。<p>VeraCrypt 支持的加密算法有 AES、Serpent、Twofish。<p>以及五种多重加密方式：AES-Twofish、AES-Twofish-Serpent、Serpent-AES、Serpent-Twofish-AES、Twofish-Serpent。<p>支持的 Hash 算法有：RIPEMD-160，SHA-256，SHA-512、Whirlpool。<h3><a href="#gnupg"aria-hidden="true"class="anchor"id="user-content-gnupg"><span aria-hidden="true"class="octicon octicon-link"></span></a>GnuPG</h3><p><a href="https://gnupg.org/"rel="nofollow noopener"target="_blank">GnuPG</a>是由 RFC4880（也称为PGP）定义的 OpenPGP 标准的完整和免费实现。<p>我的<a href="https://api.github.com/users/zowiegong/gpg_keys"rel="noopener"target="_blank">GPG 公钥</a>。<h2><a href="#%E6%92%AD%E6%94%BE%E5%99%A8"aria-hidden="true"class="anchor"id="user-content-播放器"><span aria-hidden="true"class="octicon octicon-link"></span></a>播放器</h2><h3><a href="#vlc"aria-hidden="true"class="anchor"id="user-content-vlc"><span aria-hidden="true"class="octicon octicon-link"></span></a>VLC</h3><p><a href="https://www.videolan.org/index.zh.html"rel="nofollow noopener"target="_blank">VLC</a>VLC 是一款自由、开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件，以及 DVD、音频 CD、VCD 及各类流媒体协议。<p>功能强大，配置略麻烦。<h2><a href="#%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7"aria-hidden="true"class="anchor"id="user-content-下载工具"><span aria-hidden="true"class="octicon octicon-link"></span></a>下载工具</h2><h3><a href="#free-download-manager-fdm"aria-hidden="true"class="anchor"id="user-content-free-download-manager-fdm"><span aria-hidden="true"class="octicon octicon-link"></span></a>Free Download Manager (FDM)</h3><p><a href="https://www.freedownloadmanager.org/zh/"rel="nofollow noopener"target="_blank">FDM</a>是 Windows、Mac 的一款下载软件，支持 HTTP/HTTPS/FTP/BT，不过以闭源。<p>简单实用无广告，足够日常使用。<h3><a href="#aria2"aria-hidden="true"class="anchor"id="user-content-aria2"><span aria-hidden="true"class="octicon octicon-link"></span></a>aria2</h3><p><a href="https://aria2.github.io/"rel="nofollow noopener"target="_blank">aria2</a>是一款轻量级的多协议和多源命令行 下载工具。它支持 HTTP/HTTPS、FTP、SFTP、BitTorrent、Metalink。<p>功能强大，可配置程度高，但配置较麻烦。]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;a href=&quot;#%E9%80%9A%E8%AE%AF&quot;aria-hidden=&quot;true&quot;class=&quot;anchor&quot;id=&quot;user-content-通讯&quot;&gt;&lt;span aria-hidden=&quot;true&quot;class=&quot;octicon octicon-link&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="other" scheme="https://zowiegong.com/categories/other/"/>
    
    
      <category term="privacy" scheme="https://zowiegong.com/tags/privacy/"/>
    
  </entry>
  
</feed>
